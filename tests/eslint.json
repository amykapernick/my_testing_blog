[
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/_data/contentful.js",
		"messages": [],
		"errorCount": 0,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/_data/css.js",
		"messages": [
			{
				"ruleId": "no-console",
				"severity": 1,
				"message": "Unexpected console statement.",
				"line": 10,
				"column": 3,
				"nodeType": "MemberExpression",
				"messageId": "unexpected",
				"endLine": 10,
				"endColumn": 14
			}
		],
		"errorCount": 0,
		"warningCount": 1,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"source": "const sass = require(`node-sass`),\r\n\tpath = require(`path`);\r\n\r\nmodule.exports = () => {\r\n\tconst result = sass.renderSync({\r\n\t\tfile: path.join(__dirname, `../resources/scss/main.scss`),\r\n\t});\r\n\r\n\tif (!result.css) {\r\n\t\tconsole.log(`Error compiling stylesheet`);\r\n\t\treturn `/* Error compiling styleesheet */`;\r\n\t}\r\n\r\n\treturn result.css.toString();\r\n};\r\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/actions.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 10,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 12,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 12,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 29,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 36,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 38,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 38,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 44,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 44,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 46,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 46,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 52,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 54,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 60,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 60,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 62,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 62,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 64,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 64,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 68,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 68,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 70,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 70,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 86,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 86,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 88,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 88,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 89,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 89,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 90,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 90,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 91,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 91,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 92,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 92,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 93,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 93,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 94,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 94,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 95,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 95,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 100,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 100,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 110,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 110,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 113,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 113,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 116,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 116,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 121,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 121,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 122,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 122,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 125,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 125,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 130,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 130,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 131,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 131,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 134,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 134,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 139,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 139,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 142,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 142,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 146,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 146,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 150,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 150,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 154,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 154,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 157,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 157,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 161,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 161,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 166,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 166,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 171,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 171,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 176,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 176,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 181,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 181,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 185,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 185,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 189,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 189,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 193,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 193,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 196,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 196,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 198,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 198,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 205,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 205,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 209,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 209,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 214,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 214,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 218,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 218,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 225,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 225,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 229,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 229,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 232,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 232,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 236,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 236,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 239,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 239,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 243,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 243,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 247,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 247,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 256,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 256,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 264,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 264,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 282,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 282,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 284,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 284,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 288,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 288,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 292,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 292,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 295,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 295,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 298,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 298,
				"endColumn": 5
			}
		],
		"errorCount": 71,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Actions`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/actions`);\n\t});\n\n\t// https://on.cypress.io/interacting-with-elements\n\n\tit(`.type() - type into a DOM element`, () => {\n\t\t// https://on.cypress.io/type\n\t\tcy.get(`.action-email`)\n\t\t\t.type(`fake@email.com`).should(`have.value`, `fake@email.com`)\n\n\t\t// .type() with special character sequences\n\t\t\t.type(`{leftarrow}{rightarrow}{uparrow}{downarrow}`)\n\t\t\t.type(`{del}{selectall}{backspace}`)\n\n\t\t// .type() with key modifiers\n\t\t\t.type(`{alt}{option}`) // these are equivalent\n\t\t\t.type(`{ctrl}{control}`) // these are equivalent\n\t\t\t.type(`{meta}{command}{cmd}`) // these are equivalent\n\t\t\t.type(`{shift}`)\n\n\t\t// Delay each keypress by 0.1 sec\n\t\t\t.type(`slow.typing@email.com`, { delay: 100 })\n\t\t\t.should(`have.value`, `slow.typing@email.com`);\n\n\t\tcy.get(`.action-disabled`)\n\t\t// Ignore error checking prior to type\n\t\t// like whether the input is visible or disabled\n\t\t\t.type(`disabled error checking`, { force: true })\n\t\t\t.should(`have.value`, `disabled error checking`);\n\t});\n\n\tit(`.focus() - focus on a DOM element`, () => {\n\t\t// https://on.cypress.io/focus\n\t\tcy.get(`.action-focus`).focus()\n\t\t\t.should(`have.class`, `focus`)\n\t\t\t.prev()\n\t\t\t.should(`have.attr`, `style`, `color: orange;`);\n\t});\n\n\tit(`.blur() - blur off a DOM element`, () => {\n\t\t// https://on.cypress.io/blur\n\t\tcy.get(`.action-blur`).type(`About to blur`).blur()\n\t\t\t.should(`have.class`, `error`)\n\t\t\t.prev()\n\t\t\t.should(`have.attr`, `style`, `color: red;`);\n\t});\n\n\tit(`.clear() - clears an input or textarea element`, () => {\n\t\t// https://on.cypress.io/clear\n\t\tcy.get(`.action-clear`).type(`Clear this text`)\n\t\t\t.should(`have.value`, `Clear this text`)\n\t\t\t.clear()\n\t\t\t.should(`have.value`, ``);\n\t});\n\n\tit(`.submit() - submit a form`, () => {\n\t\t// https://on.cypress.io/submit\n\t\tcy.get(`.action-form`)\n\t\t\t.find(`[type=\"text\"]`).type(`HALFOFF`);\n\t\tcy.get(`.action-form`).submit()\n\t\t\t.next().should(`contain`, `Your form has been submitted!`);\n\t});\n\n\tit(`.click() - click on a DOM element`, () => {\n\t\t// https://on.cypress.io/click\n\t\tcy.get(`.action-btn`).click();\n\n\t\t// You can click on 9 specific positions of an element:\n\t\t//  -----------------------------------\n\t\t// | topLeft        top       topRight |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// | left          center        right |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// | bottomLeft   bottom   bottomRight |\n\t\t//  -----------------------------------\n\n\t\t// clicking in the center of the element is the default\n\t\tcy.get(`#action-canvas`).click();\n\n\t\tcy.get(`#action-canvas`).click(`topLeft`);\n\t\tcy.get(`#action-canvas`).click(`top`);\n\t\tcy.get(`#action-canvas`).click(`topRight`);\n\t\tcy.get(`#action-canvas`).click(`left`);\n\t\tcy.get(`#action-canvas`).click(`right`);\n\t\tcy.get(`#action-canvas`).click(`bottomLeft`);\n\t\tcy.get(`#action-canvas`).click(`bottom`);\n\t\tcy.get(`#action-canvas`).click(`bottomRight`);\n\n\t\t// .click() accepts an x and y coordinate\n\t\t// that controls where the click occurs :)\n\n\t\tcy.get(`#action-canvas`)\n\t\t\t.click(80, 75) // click 80px on x coord and 75px on y coord\n\t\t\t.click(170, 75)\n\t\t\t.click(80, 165)\n\t\t\t.click(100, 185)\n\t\t\t.click(125, 190)\n\t\t\t.click(150, 185)\n\t\t\t.click(170, 165);\n\n\t\t// click multiple elements by passing multiple: true\n\t\tcy.get(`.action-labels>.label`).click({ multiple: true });\n\n\t\t// Ignore error checking prior to clicking\n\t\tcy.get(`.action-opacity>.btn`).click({ force: true });\n\t});\n\n\tit(`.dblclick() - double click on a DOM element`, () => {\n\t\t// https://on.cypress.io/dblclick\n\n\t\t// Our app has a listener on 'dblclick' event in our 'scripts.js'\n\t\t// that hides the div and shows an input on double click\n\t\tcy.get(`.action-div`).dblclick().should(`not.be.visible`);\n\t\tcy.get(`.action-input-hidden`).should(`be.visible`);\n\t});\n\n\tit(`.rightclick() - right click on a DOM element`, () => {\n\t\t// https://on.cypress.io/rightclick\n\n\t\t// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n\t\t// that hides the div and shows an input on right click\n\t\tcy.get(`.rightclick-action-div`).rightclick().should(`not.be.visible`);\n\t\tcy.get(`.rightclick-action-input-hidden`).should(`be.visible`);\n\t});\n\n\tit(`.check() - check a checkbox or radio element`, () => {\n\t\t// https://on.cypress.io/check\n\n\t\t// By default, .check() will check all\n\t\t// matching checkbox or radio elements in succession, one after another\n\t\tcy.get(`.action-checkboxes [type=\"checkbox\"]`).not(`[disabled]`)\n\t\t\t.check().should(`be.checked`);\n\n\t\tcy.get(`.action-radios [type=\"radio\"]`).not(`[disabled]`)\n\t\t\t.check().should(`be.checked`);\n\n\t\t// .check() accepts a value argument\n\t\tcy.get(`.action-radios [type=\"radio\"]`)\n\t\t\t.check(`radio1`).should(`be.checked`);\n\n\t\t// .check() accepts an array of values\n\t\tcy.get(`.action-multiple-checkboxes [type=\"checkbox\"]`)\n\t\t\t.check([`checkbox1`, `checkbox2`]).should(`be.checked`);\n\n\t\t// Ignore error checking prior to checking\n\t\tcy.get(`.action-checkboxes [disabled]`)\n\t\t\t.check({ force: true }).should(`be.checked`);\n\n\t\tcy.get(`.action-radios [type=\"radio\"]`)\n\t\t\t.check(`radio3`, { force: true }).should(`be.checked`);\n\t});\n\n\tit(`.uncheck() - uncheck a checkbox element`, () => {\n\t\t// https://on.cypress.io/uncheck\n\n\t\t// By default, .uncheck() will uncheck all matching\n\t\t// checkbox elements in succession, one after another\n\t\tcy.get(`.action-check [type=\"checkbox\"]`)\n\t\t\t.not(`[disabled]`)\n\t\t\t.uncheck().should(`not.be.checked`);\n\n\t\t// .uncheck() accepts a value argument\n\t\tcy.get(`.action-check [type=\"checkbox\"]`)\n\t\t\t.check(`checkbox1`)\n\t\t\t.uncheck(`checkbox1`).should(`not.be.checked`);\n\n\t\t// .uncheck() accepts an array of values\n\t\tcy.get(`.action-check [type=\"checkbox\"]`)\n\t\t\t.check([`checkbox1`, `checkbox3`])\n\t\t\t.uncheck([`checkbox1`, `checkbox3`]).should(`not.be.checked`);\n\n\t\t// Ignore error checking prior to unchecking\n\t\tcy.get(`.action-check [disabled]`)\n\t\t\t.uncheck({ force: true }).should(`not.be.checked`);\n\t});\n\n\tit(`.select() - select an option in a <select> element`, () => {\n\t\t// https://on.cypress.io/select\n\n\t\t// at first, no option should be selected\n\t\tcy.get(`.action-select`)\n\t\t\t.should(`have.value`, `--Select a fruit--`);\n\n\t\t// Select option(s) with matching text content\n\t\tcy.get(`.action-select`).select(`apples`);\n\t\t// confirm the apples were selected\n\t\t// note that each value starts with \"fr-\" in our HTML\n\t\tcy.get(`.action-select`).should(`have.value`, `fr-apples`);\n\n\t\tcy.get(`.action-select-multiple`)\n\t\t\t.select([`apples`, `oranges`, `bananas`])\n\t\t// when getting multiple values, invoke \"val\" method first\n\t\t\t.invoke(`val`)\n\t\t\t.should(`deep.equal`, [`fr-apples`, `fr-oranges`, `fr-bananas`]);\n\n\t\t// Select option(s) with matching value\n\t\tcy.get(`.action-select`).select(`fr-bananas`)\n\t\t// can attach an assertion right away to the element\n\t\t\t.should(`have.value`, `fr-bananas`);\n\n\t\tcy.get(`.action-select-multiple`)\n\t\t\t.select([`fr-apples`, `fr-oranges`, `fr-bananas`])\n\t\t\t.invoke(`val`)\n\t\t\t.should(`deep.equal`, [`fr-apples`, `fr-oranges`, `fr-bananas`]);\n\t\t// assert the selected values include oranges\n\t\tcy.get(`.action-select-multiple`)\n\t\t\t.invoke(`val`).should(`include`, `fr-oranges`);\n\t});\n\n\tit(`.scrollIntoView() - scroll an element into view`, () => {\n\t\t// https://on.cypress.io/scrollintoview\n\n\t\t// normally all of these buttons are hidden,\n\t\t// because they're not within\n\t\t// the viewable area of their parent\n\t\t// (we need to scroll to see them)\n\t\tcy.get(`#scroll-horizontal button`)\n\t\t\t.should(`not.be.visible`);\n\n\t\t// scroll the button into view, as if the user had scrolled\n\t\tcy.get(`#scroll-horizontal button`).scrollIntoView()\n\t\t\t.should(`be.visible`);\n\n\t\tcy.get(`#scroll-vertical button`)\n\t\t\t.should(`not.be.visible`);\n\n\t\t// Cypress handles the scroll direction needed\n\t\tcy.get(`#scroll-vertical button`).scrollIntoView()\n\t\t\t.should(`be.visible`);\n\n\t\tcy.get(`#scroll-both button`)\n\t\t\t.should(`not.be.visible`);\n\n\t\t// Cypress knows to scroll to the right and down\n\t\tcy.get(`#scroll-both button`).scrollIntoView()\n\t\t\t.should(`be.visible`);\n\t});\n\n\tit(`.trigger() - trigger an event on a DOM element`, () => {\n\t\t// https://on.cypress.io/trigger\n\n\t\t// To interact with a range input (slider)\n\t\t// we need to set its value & trigger the\n\t\t// event to signal it changed\n\n\t\t// Here, we invoke jQuery's val() method to set\n\t\t// the value and trigger the 'change' event\n\t\tcy.get(`.trigger-input-range`)\n\t\t\t.invoke(`val`, 25)\n\t\t\t.trigger(`change`)\n\t\t\t.get(`input[type=range]`)\n\t\t\t.siblings(`p`)\n\t\t\t.should(`have.text`, `25`);\n\t});\n\n\tit(`cy.scrollTo() - scroll the window or element to a position`, () => {\n\t\t// https://on.cypress.io/scrollTo\n\n\t\t// You can scroll to 9 specific positions of an element:\n\t\t//  -----------------------------------\n\t\t// | topLeft        top       topRight |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// | left          center        right |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// |                                   |\n\t\t// | bottomLeft   bottom   bottomRight |\n\t\t//  -----------------------------------\n\n\t\t// if you chain .scrollTo() off of cy, we will\n\t\t// scroll the entire window\n\t\tcy.scrollTo(`bottom`);\n\n\t\tcy.get(`#scrollable-horizontal`).scrollTo(`right`);\n\n\t\t// or you can scroll to a specific coordinate:\n\t\t// (x axis, y axis) in pixels\n\t\tcy.get(`#scrollable-vertical`).scrollTo(250, 250);\n\n\t\t// or you can scroll to a specific percentage\n\t\t// of the (width, height) of the element\n\t\tcy.get(`#scrollable-both`).scrollTo(`75%`, `25%`);\n\n\t\t// control the easing of the scroll (default is 'swing')\n\t\tcy.get(`#scrollable-vertical`).scrollTo(`center`, { easing: `linear` });\n\n\t\t// control the duration of the scroll (in ms)\n\t\tcy.get(`#scrollable-both`).scrollTo(`center`, { duration: 2000 });\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/aliasing.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 23,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 23,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 25,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 25,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 30,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 32,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 32,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 33,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 33,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 37,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 37,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 40,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 5
			}
		],
		"errorCount": 12,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Aliasing`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/aliasing`);\n\t});\n\n\tit(`.as() - alias a DOM element for later use`, () => {\n\t\t// https://on.cypress.io/as\n\n\t\t// Alias a DOM element for use later\n\t\t// We don't have to traverse to the element\n\t\t// later in our code, we reference it with @\n\n\t\tcy.get(`.as-table`).find(`tbody>tr`)\n\t\t\t.first().find(`td`)\n\t\t\t.first()\n\t\t\t.find(`button`)\n\t\t\t.as(`firstBtn`);\n\n\t\t// when we reference the alias, we place an\n\t\t// @ in front of its name\n\t\tcy.get(`@firstBtn`).click();\n\n\t\tcy.get(`@firstBtn`)\n\t\t\t.should(`have.class`, `btn-success`)\n\t\t\t.and(`contain`, `Changed`);\n\t});\n\n\tit(`.as() - alias a route for later use`, () => {\n\t\t// Alias the route to wait for its response\n\t\tcy.server();\n\t\tcy.route(`GET`, `comments/*`).as(`getComment`);\n\n\t\t// we have code that gets a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.network-btn`).click();\n\n\t\t// https://on.cypress.io/wait\n\t\tcy.wait(`@getComment`).its(`status`).should(`eq`, 200);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/assertions.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'describe' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 9,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 9,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 11,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 31,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 41,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 43,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'describe' is not defined.",
				"line": 50,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 50,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 52,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 54,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 54,
				"endColumn": 28
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 54,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 57,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 57,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 58,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 58,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 60,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 60,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 63,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 63,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 68,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 68,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 74,
				"column": 38,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 74,
				"endColumn": 45
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 78,
				"column": 2,
				"nodeType": "Program"
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 81,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 81,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 85,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 85,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 93,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 93,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 94,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 94,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 98,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 98,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 102,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 102,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 107,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 107,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 111,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 111,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 112,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 112,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 128,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 128,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 142,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 142,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 149,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 149,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 155,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 155,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 159,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 159,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'assert' is not defined.",
				"line": 165,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 165,
				"endColumn": 10
			}
		],
		"errorCount": 35,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Assertions`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/assertions`);\n\t});\n\n\tdescribe(`Implicit Assertions`, () => {\n\t\tit(`.should() - make an assertion about the current subject`, () => {\n\t\t\t// https://on.cypress.io/should\n\t\t\tcy.get(`.assertion-table`)\n\t\t\t\t.find(`tbody tr:last`)\n\t\t\t\t.should(`have.class`, `success`)\n\t\t\t\t.find(`td`)\n\t\t\t\t.first()\n\t\t\t// checking the text of the <td> element in various ways\n\t\t\t\t.should(`have.text`, `Column content`)\n\t\t\t\t.should(`contain`, `Column content`)\n\t\t\t\t.should(`have.html`, `Column content`)\n\t\t\t// chai-jquery uses \"is()\" to check if element matches selector\n\t\t\t\t.should(`match`, `td`)\n\t\t\t// to match text content against a regular expression\n\t\t\t// first need to invoke jQuery method text()\n\t\t\t// and then match using regular expression\n\t\t\t\t.invoke(`text`)\n\t\t\t\t.should(`match`, /column content/i);\n\n\t\t\t// a better way to check element's text content against a regular expression\n\t\t\t// is to use \"cy.contains\"\n\t\t\t// https://on.cypress.io/contains\n\t\t\tcy.get(`.assertion-table`)\n\t\t\t\t.find(`tbody tr:last`)\n\t\t\t// finds first <td> element with text content matching regular expression\n\t\t\t\t.contains(`td`, /column content/i)\n\t\t\t\t.should(`be.visible`);\n\n\t\t\t// for more information about asserting element's text\n\t\t\t// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents\n\t\t});\n\n\t\tit(`.and() - chain multiple assertions together`, () => {\n\t\t\t// https://on.cypress.io/and\n\t\t\tcy.get(`.assertions-link`)\n\t\t\t\t.should(`have.class`, `active`)\n\t\t\t\t.and(`have.attr`, `href`)\n\t\t\t\t.and(`include`, `cypress.io`);\n\t\t});\n\t});\n\n\tdescribe(`Explicit Assertions`, () => {\n\t\t// https://on.cypress.io/assertions\n\t\tit(`expect - make an assertion about a specified subject`, () => {\n\t\t\t// We can use Chai's BDD style assertions\n\t\t\texpect(true).to.be.true;\n\t\t\tconst o = { foo: `bar` };\n\n\t\t\texpect(o).to.equal(o);\n\t\t\texpect(o).to.deep.equal({ foo: `bar` });\n\t\t\t// matching text using regular expression\n\t\t\texpect(`FooBar`).to.match(/bar$/i);\n\t\t});\n\n\t\tit(`pass your own callback function to should()`, () => {\n\t\t\t// Pass a function to should that can have any number\n\t\t\t// of explicit assertions within it.\n\t\t\t// The \".should(cb)\" function will be retried\n\t\t\t// automatically until it passes all your explicit assertions or times out.\n\t\t\tcy.get(`.assertions-p`)\n\t\t\t\t.find(`p`)\n\t\t\t\t.should(($p) => {\n\t\t\t\t\t// https://on.cypress.io/$\n\t\t\t\t\t// return an array of texts from all of the p's\n\t\t\t\t\t// @ts-ignore TS6133 unused variable\n\t\t\t\t\tconst texts = $p.map((i, el) => Cypress.$(el).text()),\n\n\t\t\t\t\t\t// jquery map returns jquery object\n\t\t\t\t\t\t// and .get() convert this to simple array\n\t\t\t\t\t paragraphs = texts.get();\n\n\t\t\t\t\t// array should have length of 3\n\t\t\t\t\texpect(paragraphs, `has 3 paragraphs`).to.have.length(3);\n\n\t\t\t\t\t// use second argument to expect(...) to provide clear\n\t\t\t\t\t// message with each assertion\n\t\t\t\t\texpect(paragraphs, `has expected text in each paragraph`).to.deep.eq([\n\t\t\t\t\t\t`Some text from first p`,\n\t\t\t\t\t\t`More text from second p`,\n\t\t\t\t\t\t`And even more text from third p`,\n\t\t\t\t\t]);\n\t\t\t\t});\n\t\t});\n\n\t\tit(`finds element by class name regex`, () => {\n\t\t\tcy.get(`.docs-header`)\n\t\t\t\t.find(`div`)\n\t\t\t// .should(cb) callback function will be retried\n\t\t\t\t.should(($div) => {\n\t\t\t\t\texpect($div).to.have.length(1);\n\n\t\t\t\t\tconst { className } = $div[0];\n\n\t\t\t\t\texpect(className).to.match(/heading-/);\n\t\t\t\t})\n\t\t\t// .then(cb) callback is not retried,\n\t\t\t// it either passes or fails\n\t\t\t\t.then(($div) => {\n\t\t\t\t\texpect($div, `text content`).to.have.text(`Introduction`);\n\t\t\t\t});\n\t\t});\n\n\t\tit(`can throw any error`, () => {\n\t\t\tcy.get(`.docs-header`)\n\t\t\t\t.find(`div`)\n\t\t\t\t.should(($div) => {\n\t\t\t\t\tif ($div.length !== 1) {\n\t\t\t\t\t\t// you can throw your own errors\n\t\t\t\t\t\tthrow new Error(`Did not find 1 element`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { className } = $div[0];\n\n\t\t\t\t\tif (!className.match(/heading-/)) {\n\t\t\t\t\t\tthrow new Error(`Could not find class \"heading-\" in ${className}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\n\t\tit(`matches unknown text between two elements`, () => {\n\t\t\t/**\n       * Text from the first element.\n       * @type {string}\n      */\n\t\t\tlet text;\n\n\t\t\t/**\n       * Normalizes passed text,\n       * useful before comparing text with spaces and different capitalization.\n       * @param {string} s Text to normalize\n      */\n\t\t\tconst normalizeText = (s) => s.replace(/\\s/g, ``).toLowerCase();\n\n\t\t\tcy.get(`.two-elements`)\n\t\t\t\t.find(`.first`)\n\t\t\t\t.then(($first) => {\n\t\t\t\t\t// save text from the first element\n\t\t\t\t\ttext = normalizeText($first.text());\n\t\t\t\t});\n\n\t\t\tcy.get(`.two-elements`)\n\t\t\t\t.find(`.second`)\n\t\t\t\t.should(($div) => {\n\t\t\t\t\t// we can massage text before comparing\n\t\t\t\t\tconst secondText = normalizeText($div.text());\n\n\t\t\t\t\texpect(secondText, `second text`).to.equal(text);\n\t\t\t\t});\n\t\t});\n\n\t\tit(`assert - assert shape of an object`, () => {\n\t\t\tconst person = {\n\t\t\t\tname: `Joe`,\n\t\t\t\tage: 20,\n\t\t\t};\n\n\t\t\tassert.isObject(person, `value is object`);\n\t\t});\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/connectors.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 10,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 5
			},
			{
				"ruleId": "no-console",
				"severity": 1,
				"message": "Unexpected console statement.",
				"line": 12,
				"column": 5,
				"nodeType": "MemberExpression",
				"messageId": "unexpected",
				"endLine": 12,
				"endColumn": 16
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 16,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 18,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 24,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 24,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 29,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 35,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 35,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 39,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 39,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 40,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 41,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 42,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'describe' is not defined.",
				"line": 46,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 46,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 47,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 49,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 49,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 51,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 51,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 52,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 53,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 54,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 58,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 58,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 59,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 59,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 61,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 61,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 66,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 66,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 70,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 70,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 71,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 71,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 73,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 73,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 78,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 78,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 82,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 82,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 83,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 83,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 85,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 85,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 89,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 89,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 93,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 93,
				"endColumn": 12
			}
		],
		"errorCount": 34,
		"warningCount": 1,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Connectors`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/connectors`);\n\t});\n\n\tit(`.each() - iterate over an array of elements`, () => {\n\t\t// https://on.cypress.io/each\n\t\tcy.get(`.connectors-each-ul>li`)\n\t\t\t.each(($el, index, $list) => {\n\t\t\t\tconsole.log($el, index, $list);\n\t\t\t});\n\t});\n\n\tit(`.its() - get properties on the current subject`, () => {\n\t\t// https://on.cypress.io/its\n\t\tcy.get(`.connectors-its-ul>li`)\n\t\t// calls the 'length' property yielding that value\n\t\t\t.its(`length`)\n\t\t\t.should(`be.gt`, 2);\n\t});\n\n\tit(`.invoke() - invoke a function on the current subject`, () => {\n\t\t// our div is hidden in our script.js\n\t\t// $('.connectors-div').hide()\n\n\t\t// https://on.cypress.io/invoke\n\t\tcy.get(`.connectors-div`).should(`be.hidden`)\n\t\t// call the jquery method 'show' on the 'div.container'\n\t\t\t.invoke(`show`)\n\t\t\t.should(`be.visible`);\n\t});\n\n\tit(`.spread() - spread an array as individual args to callback function`, () => {\n\t\t// https://on.cypress.io/spread\n\t\tconst arr = [`foo`, `bar`, `baz`];\n\n\t\tcy.wrap(arr).spread((foo, bar, baz) => {\n\t\t\texpect(foo).to.eq(`foo`);\n\t\t\texpect(bar).to.eq(`bar`);\n\t\t\texpect(baz).to.eq(`baz`);\n\t\t});\n\t});\n\n\tdescribe(`.then()`, () => {\n\t\tit(`invokes a callback function with the current subject`, () => {\n\t\t\t// https://on.cypress.io/then\n\t\t\tcy.get(`.connectors-list > li`)\n\t\t\t\t.then(($lis) => {\n\t\t\t\t\texpect($lis, `3 items`).to.have.length(3);\n\t\t\t\t\texpect($lis.eq(0), `first item`).to.contain(`Walk the dog`);\n\t\t\t\t\texpect($lis.eq(1), `second item`).to.contain(`Feed the cat`);\n\t\t\t\t\texpect($lis.eq(2), `third item`).to.contain(`Write JavaScript`);\n\t\t\t\t});\n\t\t});\n\n\t\tit(`yields the returned value to the next command`, () => {\n\t\t\tcy.wrap(1)\n\t\t\t\t.then((num) => {\n\t\t\t\t\texpect(num).to.equal(1);\n\n\t\t\t\t\treturn 2;\n\t\t\t\t})\n\t\t\t\t.then((num) => {\n\t\t\t\t\texpect(num).to.equal(2);\n\t\t\t\t});\n\t\t});\n\n\t\tit(`yields the original subject without return`, () => {\n\t\t\tcy.wrap(1)\n\t\t\t\t.then((num) => {\n\t\t\t\t\texpect(num).to.equal(1);\n\t\t\t\t\t// note that nothing is returned from this callback\n\t\t\t\t})\n\t\t\t\t.then((num) => {\n\t\t\t\t\t// this callback receives the original unchanged value 1\n\t\t\t\t\texpect(num).to.equal(1);\n\t\t\t\t});\n\t\t});\n\n\t\tit(`yields the value yielded by the last Cypress command inside`, () => {\n\t\t\tcy.wrap(1)\n\t\t\t\t.then((num) => {\n\t\t\t\t\texpect(num).to.equal(1);\n\t\t\t\t\t// note how we run a Cypress command\n\t\t\t\t\t// the result yielded by this Cypress command\n\t\t\t\t\t// will be passed to the second \".then\"\n\t\t\t\t\tcy.wrap(2);\n\t\t\t\t})\n\t\t\t\t.then((num) => {\n\t\t\t\t\t// this callback receives the value yielded by \"cy.wrap(2)\"\n\t\t\t\t\texpect(num).to.equal(2);\n\t\t\t\t});\n\t\t});\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/cookies.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 7,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 7,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 11,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 14,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 14,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 19,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 19,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 22,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 24,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 24,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 26,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 26,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 29,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 31,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 32,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 32,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 33,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 33,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 34,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 35,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 35,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 36,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 40,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 42,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 44,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 44,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 47,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 50,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 50,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 52,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 54,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 56,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 56,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 59,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 59,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 61,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 61,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 64,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 64,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 66,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 66,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 68,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 68,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 70,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 70,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 73,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 73,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 75,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 75,
				"endColumn": 5
			}
		],
		"errorCount": 34,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Cookies`, () => {\n\tbeforeEach(() => {\n\t\tCypress.Cookies.debug(true);\n\n\t\tcy.visit(`https://example.cypress.io/commands/cookies`);\n\n\t\t// clear cookies again after visiting to remove\n\t\t// any 3rd party cookies picked up such as cloudflare\n\t\tcy.clearCookies();\n\t});\n\n\tit(`cy.getCookie() - get a browser cookie`, () => {\n\t\t// https://on.cypress.io/getcookie\n\t\tcy.get(`#getCookie .set-a-cookie`).click();\n\n\t\t// cy.getCookie() yields a cookie object\n\t\tcy.getCookie(`token`).should(`have.property`, `value`, `123ABC`);\n\t});\n\n\tit(`cy.getCookies() - get browser cookies`, () => {\n\t\t// https://on.cypress.io/getcookies\n\t\tcy.getCookies().should(`be.empty`);\n\n\t\tcy.get(`#getCookies .set-a-cookie`).click();\n\n\t\t// cy.getCookies() yields an array of cookies\n\t\tcy.getCookies().should(`have.length`, 1).should((cookies) => {\n\t\t\t// each cookie has these properties\n\t\t\texpect(cookies[0]).to.have.property(`name`, `token`);\n\t\t\texpect(cookies[0]).to.have.property(`value`, `123ABC`);\n\t\t\texpect(cookies[0]).to.have.property(`httpOnly`, false);\n\t\t\texpect(cookies[0]).to.have.property(`secure`, false);\n\t\t\texpect(cookies[0]).to.have.property(`domain`);\n\t\t\texpect(cookies[0]).to.have.property(`path`);\n\t\t});\n\t});\n\n\tit(`cy.setCookie() - set a browser cookie`, () => {\n\t\t// https://on.cypress.io/setcookie\n\t\tcy.getCookies().should(`be.empty`);\n\n\t\tcy.setCookie(`foo`, `bar`);\n\n\t\t// cy.getCookie() yields a cookie object\n\t\tcy.getCookie(`foo`).should(`have.property`, `value`, `bar`);\n\t});\n\n\tit(`cy.clearCookie() - clear a browser cookie`, () => {\n\t\t// https://on.cypress.io/clearcookie\n\t\tcy.getCookie(`token`).should(`be.null`);\n\n\t\tcy.get(`#clearCookie .set-a-cookie`).click();\n\n\t\tcy.getCookie(`token`).should(`have.property`, `value`, `123ABC`);\n\n\t\t// cy.clearCookies() yields null\n\t\tcy.clearCookie(`token`).should(`be.null`);\n\n\t\tcy.getCookie(`token`).should(`be.null`);\n\t});\n\n\tit(`cy.clearCookies() - clear browser cookies`, () => {\n\t\t// https://on.cypress.io/clearcookies\n\t\tcy.getCookies().should(`be.empty`);\n\n\t\tcy.get(`#clearCookies .set-a-cookie`).click();\n\n\t\tcy.getCookies().should(`have.length`, 1);\n\n\t\t// cy.clearCookies() yields null\n\t\tcy.clearCookies();\n\n\t\tcy.getCookies().should(`be.empty`);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/cypress_api.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 10,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 11,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 10
			},
			{
				"ruleId": "no-param-reassign",
				"severity": 2,
				"message": "Assignment to function parameter 'method'.",
				"line": 18,
				"column": 4,
				"nodeType": "Identifier",
				"endLine": 18,
				"endColumn": 10
			},
			{
				"ruleId": "no-console",
				"severity": 1,
				"message": "Unexpected console statement.",
				"line": 22,
				"column": 4,
				"nodeType": "MemberExpression",
				"messageId": "unexpected",
				"endLine": 22,
				"endColumn": 19
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 31,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-vars",
				"severity": 1,
				"message": "'$button' is defined but never used.",
				"line": 31,
				"column": 42,
				"nodeType": "Identifier",
				"endLine": 31,
				"endColumn": 49
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 38,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 38,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 39,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 39,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 40,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 44,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 44,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 45,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 45,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 49,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 49,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 50,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 50,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 51,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 51,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 52,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 53,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 56,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 56,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 58,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 58,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 62,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 62,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 63,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 63,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 66,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 66,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 69,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 69,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 76,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 76,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 77,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 77,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 78,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 78,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 85,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 85,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 86,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 86,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 93,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 93,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 94,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 94,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 95,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 95,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 98,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 98,
				"endColumn": 4
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 100,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 100,
				"endColumn": 33
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 100,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 100,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 100,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 100,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 104,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 104,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 105,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 105,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 106,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 106,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 109,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 109,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 111,
				"column": 20,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 111,
				"endColumn": 27
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 113,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 113,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 114,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 114,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 115,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 115,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 116,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 116,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 117,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 117,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 118,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 118,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 119,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 119,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 120,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 120,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 121,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 121,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 123,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 123,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 123,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 123,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 126,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 126,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 128,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 128,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 128,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 128,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 130,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 130,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 134,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 134,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 135,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 135,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 136,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 136,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 140,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 140,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 141,
				"column": 19,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 141,
				"endColumn": 26
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 142,
				"column": 2,
				"nodeType": "Program"
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 142,
				"column": 15,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 142,
				"endColumn": 22
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 145,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 145,
				"endColumn": 52
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 145,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 145,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 145,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 145,
				"endColumn": 17
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 146,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 146,
				"endColumn": 54
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 146,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 146,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 146,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 146,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 150,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 150,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 151,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 151,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 152,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 152,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 158,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 158,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 161,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 161,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 167,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 167,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 167,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 167,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 170,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 170,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 171,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 171,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 171,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 171,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 174,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 174,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 174,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 174,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 175,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 175,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 175,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 175,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 179,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 179,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 180,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 180,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 181,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 181,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 184,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 184,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 190,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 190,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 191,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 191,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 192,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 192,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 195,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 195,
				"endColumn": 4
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 197,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 197,
				"endColumn": 40
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 197,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 197,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 197,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 197,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 201,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 201,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 202,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 202,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 203,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 203,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 206,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 206,
				"endColumn": 4
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 208,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 208,
				"endColumn": 39
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 208,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 208,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 208,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 208,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 212,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 212,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 213,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 213,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 214,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 214,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 217,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 217,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 220,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 220,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 220,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 220,
				"endColumn": 18
			}
		],
		"errorCount": 106,
		"warningCount": 2,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Cypress.Commands`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\t// https://on.cypress.io/custom-commands\n\n\tit(`.add() - create a custom command`, () => {\n\t\tCypress.Commands.add(`console`, {\n\t\t\tprevSubject: true,\n\t\t}, (subject, method) => {\n\t\t\t// the previous subject is automatically received\n\t\t\t// and the commands arguments are shifted\n\n\t\t\t// allow us to change the console method used\n\t\t\tmethod = method || `log`;\n\n\t\t\t// log the subject to the console\n\t\t\t// @ts-ignore TS7017\n\t\t\tconsole[method](`The subject is`, subject);\n\n\t\t\t// whatever we return becomes the new subject\n\t\t\t// we don't want to change the subject so\n\t\t\t// we return whatever was passed in\n\t\t\treturn subject;\n\t\t});\n\n\t\t// @ts-ignore TS2339\n\t\tcy.get(`button`).console(`info`).then(($button) => {\n\t\t\t// subject is still $button\n\t\t});\n\t});\n});\n\n\ncontext(`Cypress.Cookies`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\t// https://on.cypress.io/cookies\n\tit(`.debug() - enable or disable debugging`, () => {\n\t\tCypress.Cookies.debug(true);\n\n\t\t// Cypress will now log in the console when\n\t\t// cookies are set or cleared\n\t\tcy.setCookie(`fakeCookie`, `123ABC`);\n\t\tcy.clearCookie(`fakeCookie`);\n\t\tcy.setCookie(`fakeCookie`, `123ABC`);\n\t\tcy.clearCookie(`fakeCookie`);\n\t\tcy.setCookie(`fakeCookie`, `123ABC`);\n\t});\n\n\tit(`.preserveOnce() - preserve cookies by key`, () => {\n\t\t// normally cookies are reset after each test\n\t\tcy.getCookie(`fakeCookie`).should(`not.be.ok`);\n\n\t\t// preserving a cookie will not clear it when\n\t\t// the next test starts\n\t\tcy.setCookie(`lastCookie`, `789XYZ`);\n\t\tCypress.Cookies.preserveOnce(`lastCookie`);\n\t});\n\n\tit(`.defaults() - set defaults for all cookies`, () => {\n\t\t// now any cookie with the name 'session_id' will\n\t\t// not be cleared before each new test runs\n\t\tCypress.Cookies.defaults({\n\t\t\twhitelist: `session_id`,\n\t\t});\n\t});\n});\n\n\ncontext(`Cypress.Server`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\t// Permanently override server options for\n\t// all instances of cy.server()\n\n\t// https://on.cypress.io/cypress-server\n\tit(`.defaults() - change default config of server`, () => {\n\t\tCypress.Server.defaults({\n\t\t\tdelay: 0,\n\t\t\tforce404: false,\n\t\t});\n\t});\n});\n\ncontext(`Cypress.arch`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\tit(`Get CPU architecture name of underlying OS`, () => {\n\t\t// https://on.cypress.io/arch\n\t\texpect(Cypress.arch).to.exist;\n\t});\n});\n\ncontext(`Cypress.config()`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\tit(`Get and set configuration options`, () => {\n\t\t// https://on.cypress.io/config\n\t\tconst myConfig = Cypress.config();\n\n\t\texpect(myConfig).to.have.property(`animationDistanceThreshold`, 5);\n\t\texpect(myConfig).to.have.property(`baseUrl`, null);\n\t\texpect(myConfig).to.have.property(`defaultCommandTimeout`, 4000);\n\t\texpect(myConfig).to.have.property(`requestTimeout`, 5000);\n\t\texpect(myConfig).to.have.property(`responseTimeout`, 30000);\n\t\texpect(myConfig).to.have.property(`viewportHeight`, 660);\n\t\texpect(myConfig).to.have.property(`viewportWidth`, 1000);\n\t\texpect(myConfig).to.have.property(`pageLoadTimeout`, 60000);\n\t\texpect(myConfig).to.have.property(`waitForAnimations`, true);\n\n\t\texpect(Cypress.config(`pageLoadTimeout`)).to.eq(60000);\n\n\t\t// this will change the config for the rest of your tests!\n\t\tCypress.config(`pageLoadTimeout`, 20000);\n\n\t\texpect(Cypress.config(`pageLoadTimeout`)).to.eq(20000);\n\n\t\tCypress.config(`pageLoadTimeout`, 60000);\n\t});\n});\n\ncontext(`Cypress.dom`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\t// https://on.cypress.io/dom\n\tit(`.isHidden() - determine if a DOM element is hidden`, () => {\n\t\tconst hiddenP = Cypress.$(`.dom-p p.hidden`).get(0),\n\t\t visibleP = Cypress.$(`.dom-p p.visible`).get(0);\n\n\t\t// our first paragraph has css class 'hidden'\n\t\texpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\n\t\texpect(Cypress.dom.isHidden(visibleP)).to.be.false;\n\t});\n});\n\ncontext(`Cypress.env()`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\t// We can set environment variables for highly dynamic values\n\n\t// https://on.cypress.io/environment-variables\n\tit(`Get environment variables`, () => {\n\t\t// https://on.cypress.io/env\n\t\t// set multiple environment variables\n\t\tCypress.env({\n\t\t\thost: `veronica.dev.local`,\n\t\t\tapi_server: `http://localhost:8888/v1/`,\n\t\t});\n\n\t\t// get environment variable\n\t\texpect(Cypress.env(`host`)).to.eq(`veronica.dev.local`);\n\n\t\t// set environment variable\n\t\tCypress.env(`api_server`, `http://localhost:8888/v2/`);\n\t\texpect(Cypress.env(`api_server`)).to.eq(`http://localhost:8888/v2/`);\n\n\t\t// get all environment variable\n\t\texpect(Cypress.env()).to.have.property(`host`, `veronica.dev.local`);\n\t\texpect(Cypress.env()).to.have.property(`api_server`, `http://localhost:8888/v2/`);\n\t});\n});\n\ncontext(`Cypress.log`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\tit(`Control what is printed to the Command Log`, () => {\n\t\t// https://on.cypress.io/cypress-log\n\t});\n});\n\n\ncontext(`Cypress.platform`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\tit(`Get underlying OS name`, () => {\n\t\t// https://on.cypress.io/platform\n\t\texpect(Cypress.platform).to.be.exist;\n\t});\n});\n\ncontext(`Cypress.version`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\tit(`Get current version of Cypress being run`, () => {\n\t\t// https://on.cypress.io/version\n\t\texpect(Cypress.version).to.be.exist;\n\t});\n});\n\ncontext(`Cypress.spec`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/cypress-api`);\n\t});\n\n\tit(`Get current spec information`, () => {\n\t\t// https://on.cypress.io/spec\n\t\t// wrap the object so we can inspect it easily by clicking in the command log\n\t\tcy.wrap(Cypress.spec).should(`have.keys`, [`name`, `relative`, `absolute`]);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/files.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 8,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 9,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 9,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 10,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 13,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 19,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 19,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 25,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 25,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 26,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 26,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 30,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 34,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 36,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 41,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 45,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 45,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 47,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 53,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 57,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 57,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 59,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 59,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 64,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 64,
				"endColumn": 4
			},
			{
				"ruleId": "func-names",
				"severity": 1,
				"message": "Unexpected unnamed function.",
				"line": 64,
				"column": 49,
				"nodeType": "FunctionExpression",
				"messageId": "unnamed",
				"endLine": 64,
				"endColumn": 58
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 68,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 68,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 73,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 73,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 77,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 77,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 82,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 82,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 83,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 83,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 87,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 87,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 94,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 94,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 96,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 96,
				"endColumn": 7
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 98,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 98,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 99,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 99,
				"endColumn": 35
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 99,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 99,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 104,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 104,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 110,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 110,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 111,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 111,
				"endColumn": 10
			}
		],
		"errorCount": 32,
		"warningCount": 1,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\n// / JSON fixture file can be loaded directly using\n// the built-in JavaScript bundler\n// @ts-ignore\nconst requiredExample = require(`../../fixtures/example`);\n\ncontext(`Files`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/files`);\n\t});\n\n\tbeforeEach(() => {\n\t\t// load example.json fixture file and store\n\t\t// in the test context object\n\t\tcy.fixture(`example.json`).as(`example`);\n\t});\n\n\tit(`cy.fixture() - load a fixture`, () => {\n\t\t// https://on.cypress.io/fixture\n\n\t\t// Instead of writing a response inline you can\n\t\t// use a fixture file's content.\n\n\t\tcy.server();\n\t\tcy.fixture(`example.json`).as(`comment`);\n\t\t// when application makes an Ajax request matching \"GET comments/*\"\n\t\t// Cypress will intercept it and reply with object\n\t\t// from the \"comment\" alias\n\t\tcy.route(`GET`, `comments/*`, `@comment`).as(`getComment`);\n\n\t\t// we have code that gets a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.fixture-btn`).click();\n\n\t\tcy.wait(`@getComment`).its(`responseBody`)\n\t\t\t.should(`have.property`, `name`)\n\t\t\t.and(`include`, `Using fixtures to represent data`);\n\n\t\t// you can also just write the fixture in the route\n\t\tcy.route(`GET`, `comments/*`, `fixture:example.json`).as(`getComment`);\n\n\t\t// we have code that gets a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.fixture-btn`).click();\n\n\t\tcy.wait(`@getComment`).its(`responseBody`)\n\t\t\t.should(`have.property`, `name`)\n\t\t\t.and(`include`, `Using fixtures to represent data`);\n\n\t\t// or write fx to represent fixture\n\t\t// by default it assumes it's .json\n\t\tcy.route(`GET`, `comments/*`, `fx:example`).as(`getComment`);\n\n\t\t// we have code that gets a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.fixture-btn`).click();\n\n\t\tcy.wait(`@getComment`).its(`responseBody`)\n\t\t\t.should(`have.property`, `name`)\n\t\t\t.and(`include`, `Using fixtures to represent data`);\n\t});\n\n\tit(`cy.fixture() or require - load a fixture`, function () {\n\t\t// we are inside the \"function () { ... }\"\n\t\t// callback and can use test context object \"this\"\n\t\t// \"this.example\" was loaded in \"beforeEach\" function callback\n\t\texpect(this.example, `fixture in the test context`)\n\t\t\t.to.deep.equal(requiredExample);\n\n\t\t// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n\t\t// @ts-ignore\n\t\tcy.wrap(this.example, `fixture vs require`)\n\t\t\t.should(`deep.equal`, requiredExample);\n\t});\n\n\tit(`cy.readFile() - read file contents`, () => {\n\t\t// https://on.cypress.io/readfile\n\n\t\t// You can read a file and yield its contents\n\t\t// The filePath is relative to your project's root.\n\t\tcy.readFile(`cypress.json`).then((json) => {\n\t\t\texpect(json).to.be.an(`object`);\n\t\t});\n\t});\n\n\tit(`cy.writeFile() - write to a file`, () => {\n\t\t// https://on.cypress.io/writefile\n\n\t\t// You can write to a file\n\n\t\t// Use a response from a request to automatically\n\t\t// generate a fixture file for use later\n\t\tcy.request(`https://jsonplaceholder.cypress.io/users`)\n\t\t\t.then((response) => {\n\t\t\t\tcy.writeFile(`cypress/fixtures/users.json`, response.body);\n\t\t\t});\n\t\tcy.fixture(`users`).should((users) => {\n\t\t\texpect(users[0].name).to.exist;\n\t\t});\n\n\t\t// JavaScript arrays and objects are stringified\n\t\t// and formatted into text.\n\t\tcy.writeFile(`cypress/fixtures/profile.json`, {\n\t\t\tid: 8739,\n\t\t\tname: `Jane`,\n\t\t\temail: `jane@example.com`,\n\t\t});\n\n\t\tcy.fixture(`profile`).should((profile) => {\n\t\t\texpect(profile.name).to.eq(`Jane`);\n\t\t});\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/local_storage.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 11,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 13,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 14,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 14,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 14,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 14,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 15,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 15,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 16,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 16,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 20,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 21,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 21,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 21,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 21,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 22,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 22,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 22,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 23,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 23,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 23,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 23,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 27,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 27,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 28,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 28,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 29,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 29,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 30,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 30,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 33,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 33,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 34,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 34,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 34,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 35,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 35,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 36,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 40,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 41,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 41,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 42,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 42,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 43,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'localStorage' is not defined.",
				"line": 43,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 46,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 46,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 47,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 47,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 47,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 48,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 48,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 48,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 48,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 49,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 49,
				"endColumn": 10
			}
		],
		"errorCount": 43,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Local Storage`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/local-storage`);\n\t});\n\t// Although local storage is automatically cleared\n\t// in between tests to maintain a clean state\n\t// sometimes we need to clear the local storage manually\n\n\tit(`cy.clearLocalStorage() - clear all data in local storage`, () => {\n\t\t// https://on.cypress.io/clearlocalstorage\n\t\tcy.get(`.ls-btn`).click().should(() => {\n\t\t\texpect(localStorage.getItem(`prop1`)).to.eq(`red`);\n\t\t\texpect(localStorage.getItem(`prop2`)).to.eq(`blue`);\n\t\t\texpect(localStorage.getItem(`prop3`)).to.eq(`magenta`);\n\t\t});\n\n\t\t// clearLocalStorage() yields the localStorage object\n\t\tcy.clearLocalStorage().should((ls) => {\n\t\t\texpect(ls.getItem(`prop1`)).to.be.null;\n\t\t\texpect(ls.getItem(`prop2`)).to.be.null;\n\t\t\texpect(ls.getItem(`prop3`)).to.be.null;\n\t\t});\n\n\t\t// Clear key matching string in Local Storage\n\t\tcy.get(`.ls-btn`).click().should(() => {\n\t\t\texpect(localStorage.getItem(`prop1`)).to.eq(`red`);\n\t\t\texpect(localStorage.getItem(`prop2`)).to.eq(`blue`);\n\t\t\texpect(localStorage.getItem(`prop3`)).to.eq(`magenta`);\n\t\t});\n\n\t\tcy.clearLocalStorage(`prop1`).should((ls) => {\n\t\t\texpect(ls.getItem(`prop1`)).to.be.null;\n\t\t\texpect(ls.getItem(`prop2`)).to.eq(`blue`);\n\t\t\texpect(ls.getItem(`prop3`)).to.eq(`magenta`);\n\t\t});\n\n\t\t// Clear keys matching regex in Local Storage\n\t\tcy.get(`.ls-btn`).click().should(() => {\n\t\t\texpect(localStorage.getItem(`prop1`)).to.eq(`red`);\n\t\t\texpect(localStorage.getItem(`prop2`)).to.eq(`blue`);\n\t\t\texpect(localStorage.getItem(`prop3`)).to.eq(`magenta`);\n\t\t});\n\n\t\tcy.clearLocalStorage(/prop1|2/).should((ls) => {\n\t\t\texpect(ls.getItem(`prop1`)).to.be.null;\n\t\t\texpect(ls.getItem(`prop2`)).to.be.null;\n\t\t\texpect(ls.getItem(`prop3`)).to.eq(`magenta`);\n\t\t});\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/location.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 10,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 13,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 16,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 16,
				"endColumn": 38
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 16,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 17,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 17,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 18,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 19,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 19,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 20,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 21,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 21,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 22,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 23,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 23,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 24,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 24,
				"endColumn": 40
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 24,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 24,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 28,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 30,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 5
			}
		],
		"errorCount": 20,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Location`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/location`);\n\t});\n\n\tit(`cy.hash() - get the current URL hash`, () => {\n\t\t// https://on.cypress.io/hash\n\t\tcy.hash().should(`be.empty`);\n\t});\n\n\tit(`cy.location() - get window.location`, () => {\n\t\t// https://on.cypress.io/location\n\t\tcy.location().should((location) => {\n\t\t\texpect(location.hash).to.be.empty;\n\t\t\texpect(location.href).to.eq(`https://example.cypress.io/commands/location`);\n\t\t\texpect(location.host).to.eq(`example.cypress.io`);\n\t\t\texpect(location.hostname).to.eq(`example.cypress.io`);\n\t\t\texpect(location.origin).to.eq(`https://example.cypress.io`);\n\t\t\texpect(location.pathname).to.eq(`/commands/location`);\n\t\t\texpect(location.port).to.eq(``);\n\t\t\texpect(location.protocol).to.eq(`https:`);\n\t\t\texpect(location.search).to.be.empty;\n\t\t});\n\t});\n\n\tit(`cy.url() - get the current URL`, () => {\n\t\t// https://on.cypress.io/url\n\t\tcy.url().should(`eq`, `https://example.cypress.io/commands/location`);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/misc.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 13,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 18,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 22,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 28,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 34,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 34,
				"column": 22,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 29
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 34,
				"column": 55,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 62
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 36,
				"column": 7,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 14
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 37,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 37,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 40,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 43,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 48,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 48,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 50,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 50,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 51,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 51,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 53,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 54,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 57,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 57,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 58,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 58,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 60,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 60,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 63,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 63,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 64,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 64,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 79,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 79,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 81,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 81,
				"endColumn": 5
			}
		],
		"errorCount": 28,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Misc`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/misc`);\n\t});\n\n\tit(`.end() - end the command chain`, () => {\n\t\t// https://on.cypress.io/end\n\n\t\t// cy.end is useful when you want to end a chain of commands\n\t\t// and force Cypress to re-query from the root element\n\t\tcy.get(`.misc-table`).within(() => {\n\t\t\t// ends the current chain and yields null\n\t\t\tcy.contains(`Cheryl`).click().end();\n\n\t\t\t// queries the entire table again\n\t\t\tcy.contains(`Charles`).click();\n\t\t});\n\t});\n\n\tit(`cy.exec() - execute a system command`, () => {\n\t\t// https://on.cypress.io/exec\n\n\t\t// execute a system command.\n\t\t// so you can take actions necessary for\n\t\t// your test outside the scope of Cypress.\n\t\tcy.exec(`echo Jane Lane`)\n\t\t\t.its(`stdout`).should(`contain`, `Jane Lane`);\n\n\t\t// we can use Cypress.platform string to\n\t\t// select appropriate command\n\t\t// https://on.cypress/io/platform\n\t\tcy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n\n\t\tif (Cypress.platform === `win32`) {\n\t\t\tcy.exec(`print cypress.json`)\n\t\t\t\t.its(`stderr`).should(`be.empty`);\n\t\t} else {\n\t\t\tcy.exec(`cat cypress.json`)\n\t\t\t\t.its(`stderr`).should(`be.empty`);\n\n\t\t\tcy.exec(`pwd`)\n\t\t\t\t.its(`code`).should(`eq`, 0);\n\t\t}\n\t});\n\n\tit(`cy.focused() - get the DOM element that has focus`, () => {\n\t\t// https://on.cypress.io/focused\n\t\tcy.get(`.misc-form`).find(`#name`).click();\n\t\tcy.focused().should(`have.id`, `name`);\n\n\t\tcy.get(`.misc-form`).find(`#description`).click();\n\t\tcy.focused().should(`have.id`, `description`);\n\t});\n\n\tcontext(`Cypress.Screenshot`, () => {\n\t\tit(`cy.screenshot() - take a screenshot`, () => {\n\t\t\t// https://on.cypress.io/screenshot\n\t\t\tcy.screenshot(`my-image`);\n\t\t});\n\n\t\tit(`Cypress.Screenshot.defaults() - change default config of screenshots`, () => {\n\t\t\tCypress.Screenshot.defaults({\n\t\t\t\tblackout: [`.foo`],\n\t\t\t\tcapture: `viewport`,\n\t\t\t\tclip: {\n\t\t\t\t\tx: 0, y: 0, width: 200, height: 200\n\t\t\t\t},\n\t\t\t\tscale: false,\n\t\t\t\tdisableTimersAndAnimations: true,\n\t\t\t\tscreenshotOnRunFailure: true,\n\t\t\t\tbeforeScreenshot() { },\n\t\t\t\tafterScreenshot() { },\n\t\t\t});\n\t\t});\n\t});\n\n\tit(`cy.wrap() - wrap an object`, () => {\n\t\t// https://on.cypress.io/wrap\n\t\tcy.wrap({ foo: `bar` })\n\t\t\t.should(`have.property`, `foo`)\n\t\t\t.and(`include`, `bar`);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/navigation.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 6,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 6,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 7,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 7,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 10,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 13,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 18,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 19,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 19,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 22,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 23,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 23,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 26,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 26,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 27,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 27,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 30,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 32,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 32,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 35,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 35,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 38,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 38,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 44,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 44,
				"endColumn": 5
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 48,
				"column": 5,
				"nodeType": "ExpressionStatement",
				"endLine": 48,
				"endColumn": 58
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 48,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 48,
				"endColumn": 11
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 52,
				"column": 5,
				"nodeType": "ExpressionStatement",
				"endLine": 52,
				"endColumn": 58
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 52,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 11
			}
		],
		"errorCount": 24,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Navigation`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io`);\n\t\tcy.get(`.navbar-nav`).contains(`Commands`).click();\n\t\tcy.get(`.dropdown-menu`).contains(`Navigation`).click();\n\t});\n\n\tit(`cy.go() - go back or forward in the browser's history`, () => {\n\t\t// https://on.cypress.io/go\n\n\t\tcy.location(`pathname`).should(`include`, `navigation`);\n\n\t\tcy.go(`back`);\n\t\tcy.location(`pathname`).should(`not.include`, `navigation`);\n\n\t\tcy.go(`forward`);\n\t\tcy.location(`pathname`).should(`include`, `navigation`);\n\n\t\t// clicking back\n\t\tcy.go(-1);\n\t\tcy.location(`pathname`).should(`not.include`, `navigation`);\n\n\t\t// clicking forward\n\t\tcy.go(1);\n\t\tcy.location(`pathname`).should(`include`, `navigation`);\n\t});\n\n\tit(`cy.reload() - reload the page`, () => {\n\t\t// https://on.cypress.io/reload\n\t\tcy.reload();\n\n\t\t// reload the page without using the cache\n\t\tcy.reload(true);\n\t});\n\n\tit(`cy.visit() - visit a remote url`, () => {\n\t\t// https://on.cypress.io/visit\n\n\t\t// Visit any sub-domain of your current domain\n\n\t\t// Pass options to the visit\n\t\tcy.visit(`https://example.cypress.io/commands/navigation`, {\n\t\t\ttimeout: 50000, // increase total time for the visit to resolve\n\t\t\tonBeforeLoad(contentWindow) {\n\t\t\t\t// contentWindow is the remote page's window object\n\t\t\t\texpect(typeof contentWindow === `object`).to.be.true;\n\t\t\t},\n\t\t\tonLoad(contentWindow) {\n\t\t\t\t// contentWindow is the remote page's window object\n\t\t\t\texpect(typeof contentWindow === `object`).to.be.true;\n\t\t\t},\n\t\t});\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/network_requests.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 10,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 13,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 16,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 17,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 17,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 18,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 19,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 19,
				"endColumn": 38
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 19,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 19,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 20,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 20,
				"endColumn": 39
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 20,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 21,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 21,
				"endColumn": 45
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 21,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 21,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 22,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 22,
				"endColumn": 46
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 22,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 23,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 23,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 23,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 23,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 29,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 29,
				"endColumn": 37
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 29,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 10
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 31,
				"column": 4,
				"nodeType": "ExpressionStatement",
				"endLine": 31,
				"endColumn": 40
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 31,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 33,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 33,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 36,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 48,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 48,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 50,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 50,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 52,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 53,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 54,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 55,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 55,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 60,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 60,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 61,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 61,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 64,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 64,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 65,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 65,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 66,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 66,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 70,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 70,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 73,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 73,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 90,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 90,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 92,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 92,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 99,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 99,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 101,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 101,
				"endColumn": 7
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 110,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 110,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 111,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 111,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 117,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 117,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 121,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 121,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 123,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 123,
				"endColumn": 5
			},
			{
				"ruleId": "func-names",
				"severity": 1,
				"message": "Unexpected unnamed function.",
				"line": 126,
				"column": 10,
				"nodeType": "FunctionExpression",
				"messageId": "unnamed",
				"endLine": 126,
				"endColumn": 19
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 133,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 133,
				"endColumn": 7
			},
			{
				"ruleId": "func-names",
				"severity": 1,
				"message": "Unexpected unnamed function.",
				"line": 140,
				"column": 10,
				"nodeType": "FunctionExpression",
				"messageId": "unnamed",
				"endLine": 140,
				"endColumn": 19
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 144,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 144,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 148,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 148,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 153,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 153,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 156,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 156,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 160,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 160,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 163,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 163,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 166,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 166,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 170,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 170,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 171,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 171,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 172,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 172,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 173,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 173,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 174,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 174,
				"endColumn": 10
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 178,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 178,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 188,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 188,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 190,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 190,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 193,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 193,
				"endColumn": 5
			}
		],
		"errorCount": 63,
		"warningCount": 2,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Network Requests`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/network-requests`);\n\t});\n\n\t// Manage AJAX / XHR requests in your app\n\n\tit(`cy.server() - control behavior of network requests and responses`, () => {\n\t\t// https://on.cypress.io/server\n\n\t\tcy.server().should((server) => {\n\t\t\t// the default options on server\n\t\t\t// you can override any of these options\n\t\t\texpect(server.delay).to.eq(0);\n\t\t\texpect(server.method).to.eq(`GET`);\n\t\t\texpect(server.status).to.eq(200);\n\t\t\texpect(server.headers).to.be.null;\n\t\t\texpect(server.response).to.be.null;\n\t\t\texpect(server.onRequest).to.be.undefined;\n\t\t\texpect(server.onResponse).to.be.undefined;\n\t\t\texpect(server.onAbort).to.be.undefined;\n\n\t\t\t// These options control the server behavior\n\t\t\t// affecting all requests\n\n\t\t\t// pass false to disable existing route stubs\n\t\t\texpect(server.enable).to.be.true;\n\t\t\t// forces requests that don't match your routes to 404\n\t\t\texpect(server.force404).to.be.false;\n\t\t\t// whitelists requests from ever being logged or stubbed\n\t\t\texpect(server.whitelist).to.be.a(`function`);\n\t\t});\n\n\t\tcy.server({\n\t\t\tmethod: `POST`,\n\t\t\tdelay: 1000,\n\t\t\tstatus: 422,\n\t\t\tresponse: {},\n\t\t});\n\n\t\t// any route commands will now inherit the above options\n\t\t// from the server. anything we pass specifically\n\t\t// to route will override the defaults though.\n\t});\n\n\tit(`cy.request() - make an XHR request`, () => {\n\t\t// https://on.cypress.io/request\n\t\tcy.request(`https://jsonplaceholder.cypress.io/comments`)\n\t\t\t.should((response) => {\n\t\t\t\texpect(response.status).to.eq(200);\n\t\t\t\texpect(response.body).to.have.length(500);\n\t\t\t\texpect(response).to.have.property(`headers`);\n\t\t\t\texpect(response).to.have.property(`duration`);\n\t\t\t});\n\t});\n\n\n\tit(`cy.request() - verify response using BDD syntax`, () => {\n\t\tcy.request(`https://jsonplaceholder.cypress.io/comments`)\n\t\t\t.then((response) => {\n\t\t\t\t// https://on.cypress.io/assertions\n\t\t\t\texpect(response).property(`status`).to.equal(200);\n\t\t\t\texpect(response).property(`body`).to.have.length(500);\n\t\t\t\texpect(response).to.include.keys(`headers`, `duration`);\n\t\t\t});\n\t});\n\n\tit(`cy.request() with query parameters`, () => {\n\t\t// will execute request\n\t\t// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\n\t\tcy.request({\n\t\t\turl: `https://jsonplaceholder.cypress.io/comments`,\n\t\t\tqs: {\n\t\t\t\tpostId: 1,\n\t\t\t\tid: 3,\n\t\t\t},\n\t\t})\n\t\t\t.its(`body`)\n\t\t\t.should(`be.an`, `array`)\n\t\t\t.and(`have.length`, 1)\n\t\t\t.its(`0`) // yields first element of the array\n\t\t\t.should(`contain`, {\n\t\t\t\tpostId: 1,\n\t\t\t\tid: 3,\n\t\t\t});\n\t});\n\n\tit(`cy.request() - pass result to the second request`, () => {\n\t\t// first, let's find out the userId of the first user we have\n\t\tcy.request(`https://jsonplaceholder.cypress.io/users?_limit=1`)\n\t\t\t.its(`body`) // yields the response object\n\t\t\t.its(`0`) // yields the first element of the returned list\n\t\t// the above two commands its('body').its('0')\n\t\t// can be written as its('body.0')\n\t\t// if you do not care about TypeScript checks\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).property(`id`).to.be.a(`number`);\n\t\t\t\t// make a new post on behalf of the user\n\t\t\t\tcy.request(`POST`, `https://jsonplaceholder.cypress.io/posts`, {\n\t\t\t\t\tuserId: user.id,\n\t\t\t\t\ttitle: `Cypress Test Runner`,\n\t\t\t\t\tbody: `Fast, easy and reliable testing for anything that runs in a browser.`,\n\t\t\t\t});\n\t\t\t})\n\t\t// note that the value here is the returned value of the 2nd request\n\t\t// which is the new post object\n\t\t\t.then((response) => {\n\t\t\t\texpect(response).property(`status`).to.equal(201); // new entity created\n\t\t\t\texpect(response).property(`body`).to.contain({\n\t\t\t\t\tid: 101, // there are already 100 posts, so new entity gets id 101\n\t\t\t\t\ttitle: `Cypress Test Runner`,\n\t\t\t\t});\n\t\t\t\t// we don't know the user id here - since it was in above closure\n\t\t\t\t// so in this test just confirm that the property is there\n\t\t\t\texpect(response.body).property(`userId`).to.be.a(`number`);\n\t\t\t});\n\t});\n\n\tit(`cy.request() - save response in the shared test context`, () => {\n\t\t// https://on.cypress.io/variables-and-aliases\n\t\tcy.request(`https://jsonplaceholder.cypress.io/users?_limit=1`)\n\t\t\t.its(`body`).its(`0`) // yields the first element of the returned list\n\t\t\t.as(`user`) // saves the object in the test context\n\t\t\t.then(function () {\n\t\t\t\t// NOTE 👀\n\t\t\t\t//  By the time this callback runs the \"as('user')\" command\n\t\t\t\t//  has saved the user object in the test context.\n\t\t\t\t//  To access the test context we need to use\n\t\t\t\t//  the \"function () { ... }\" callback form,\n\t\t\t\t//  otherwise \"this\" points at a wrong or undefined object!\n\t\t\t\tcy.request(`POST`, `https://jsonplaceholder.cypress.io/posts`, {\n\t\t\t\t\tuserId: this.user.id,\n\t\t\t\t\ttitle: `Cypress Test Runner`,\n\t\t\t\t\tbody: `Fast, easy and reliable testing for anything that runs in a browser.`,\n\t\t\t\t})\n\t\t\t\t\t.its(`body`).as(`post`); // save the new post from the response\n\t\t\t})\n\t\t\t.then(function () {\n\t\t\t\t// When this callback runs, both \"cy.request\" API commands have finished\n\t\t\t\t// and the test context has \"user\" and \"post\" objects set.\n\t\t\t\t// Let's verify them.\n\t\t\t\texpect(this.post, `post has the right user id`).property(`userId`).to.equal(this.user.id);\n\t\t\t});\n\t});\n\n\tit(`cy.route() - route responses to matching requests`, () => {\n\t\t// https://on.cypress.io/route\n\n\t\tconst message = `whoa, this comment does not exist`;\n\n\t\tcy.server();\n\n\t\t// Listen to GET to comments/1\n\t\tcy.route(`GET`, `comments/*`).as(`getComment`);\n\n\t\t// we have code that gets a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.network-btn`).click();\n\n\t\t// https://on.cypress.io/wait\n\t\tcy.wait(`@getComment`).its(`status`).should(`eq`, 200);\n\n\t\t// Listen to POST to comments\n\t\tcy.route(`POST`, `/comments`).as(`postComment`);\n\n\t\t// we have code that posts a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.network-post`).click();\n\t\tcy.wait(`@postComment`).should((xhr) => {\n\t\t\texpect(xhr.requestBody).to.include(`email`);\n\t\t\texpect(xhr.requestHeaders).to.have.property(`Content-Type`);\n\t\t\texpect(xhr.responseBody).to.have.property(`name`, `Using POST in cy.route()`);\n\t\t});\n\n\t\t// Stub a response to PUT comments/ ****\n\t\tcy.route({\n\t\t\tmethod: `PUT`,\n\t\t\turl: `comments/*`,\n\t\t\tstatus: 404,\n\t\t\tresponse: { error: message },\n\t\t\tdelay: 500,\n\t\t}).as(`putComment`);\n\n\t\t// we have code that puts a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.network-put`).click();\n\n\t\tcy.wait(`@putComment`);\n\n\t\t// our 404 statusCode logic in scripts.js executed\n\t\tcy.get(`.network-put-comment`).should(`contain`, message);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/querying.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 11,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 14,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 14,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 18,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 22,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 26,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 26,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 31,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 37,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 37,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 42,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 44,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 44,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 49,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 49,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 53,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 59,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 59,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 63,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 63,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 68,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 68,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 70,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 70,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 71,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 71,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 72,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 72,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 76,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 76,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 80,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 80,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 82,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 82,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 84,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 84,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 88,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 88,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 90,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 90,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 92,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 92,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 95,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 95,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 98,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 98,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 101,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 101,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 105,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 105,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 108,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 108,
				"endColumn": 6
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 111,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 111,
				"endColumn": 6
			}
		],
		"errorCount": 34,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Querying`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/querying`);\n\t});\n\n\t// The most commonly used query is 'cy.get()', you can\n\t// think of this like the '$' in jQuery\n\n\tit(`cy.get() - query DOM elements`, () => {\n\t\t// https://on.cypress.io/get\n\n\t\tcy.get(`#query-btn`).should(`contain`, `Button`);\n\n\t\tcy.get(`.query-btn`).should(`contain`, `Button`);\n\n\t\tcy.get(`#querying .well>button:first`).should(`contain`, `Button`);\n\t\t//              ↲\n\t\t// Use CSS selectors just like jQuery\n\n\t\tcy.get(`[data-test-id=\"test-example\"]`).should(`have.class`, `example`);\n\n\t\t// 'cy.get()' yields jQuery object, you can get its attribute\n\t\t// by invoking `.attr()` method\n\t\tcy.get(`[data-test-id=\"test-example\"]`)\n\t\t\t.invoke(`attr`, `data-test-id`)\n\t\t\t.should(`equal`, `test-example`);\n\n\t\t// or you can get element's CSS property\n\t\tcy.get(`[data-test-id=\"test-example\"]`)\n\t\t\t.invoke(`css`, `position`)\n\t\t\t.should(`equal`, `static`);\n\n\t\t// or use assertions directly during 'cy.get()'\n\t\t// https://on.cypress.io/assertions\n\t\tcy.get(`[data-test-id=\"test-example\"]`)\n\t\t\t.should(`have.attr`, `data-test-id`, `test-example`)\n\t\t\t.and(`have.css`, `position`, `static`);\n\t});\n\n\tit(`cy.contains() - query DOM elements with matching content`, () => {\n\t\t// https://on.cypress.io/contains\n\t\tcy.get(`.query-list`)\n\t\t\t.contains(`bananas`)\n\t\t\t.should(`have.class`, `third`);\n\n\t\t// we can pass a regexp to `.contains()`\n\t\tcy.get(`.query-list`)\n\t\t\t.contains(/^b\\w+/)\n\t\t\t.should(`have.class`, `third`);\n\n\t\tcy.get(`.query-list`)\n\t\t\t.contains(`apples`)\n\t\t\t.should(`have.class`, `first`);\n\n\t\t// passing a selector to contains will\n\t\t// yield the selector containing the text\n\t\tcy.get(`#querying`)\n\t\t\t.contains(`ul`, `oranges`)\n\t\t\t.should(`have.class`, `query-list`);\n\n\t\tcy.get(`.query-button`)\n\t\t\t.contains(`Save Form`)\n\t\t\t.should(`have.class`, `btn`);\n\t});\n\n\tit(`.within() - query DOM elements within a specific element`, () => {\n\t\t// https://on.cypress.io/within\n\t\tcy.get(`.query-form`).within(() => {\n\t\t\tcy.get(`input:first`).should(`have.attr`, `placeholder`, `Email`);\n\t\t\tcy.get(`input:last`).should(`have.attr`, `placeholder`, `Password`);\n\t\t});\n\t});\n\n\tit(`cy.root() - query the root DOM element`, () => {\n\t\t// https://on.cypress.io/root\n\n\t\t// By default, root is the document\n\t\tcy.root().should(`match`, `html`);\n\n\t\tcy.get(`.query-ul`).within(() => {\n\t\t\t// In this within, the root is now the ul DOM element\n\t\t\tcy.root().should(`have.class`, `query-ul`);\n\t\t});\n\t});\n\n\tit(`best practices - selecting elements`, () => {\n\t\t// https://on.cypress.io/best-practices#Selecting-Elements\n\t\tcy.get(`[data-cy=best-practices-selecting-elements]`).within(() => {\n\t\t\t// Worst - too generic, no context\n\t\t\tcy.get(`button`).click();\n\n\t\t\t// Bad. Coupled to styling. Highly subject to change.\n\t\t\tcy.get(`.btn.btn-large`).click();\n\n\t\t\t// Average. Coupled to the `name` attribute which has HTML semantics.\n\t\t\tcy.get(`[name=submission]`).click();\n\n\t\t\t// Better. But still coupled to styling or JS event listeners.\n\t\t\tcy.get(`#main`).click();\n\n\t\t\t// Slightly better. Uses an ID but also ensures the element\n\t\t\t// has an ARIA role attribute\n\t\t\tcy.get(`#main[role=button]`).click();\n\n\t\t\t// Much better. But still coupled to text content that may change.\n\t\t\tcy.contains(`Submit`).click();\n\n\t\t\t// Best. Insulated from all changes.\n\t\t\tcy.get(`[data-cy=submit]`).click();\n\t\t});\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/spies_stubs_clocks.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 6,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 6,
				"endColumn": 5
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 12,
				"column": 2,
				"nodeType": "Program"
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 12,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 12,
				"endColumn": 12
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 16,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 16,
				"endColumn": 28
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 19,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 19,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 20,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 5
			},
			{
				"ruleId": "no-console",
				"severity": 1,
				"message": "Unexpected console statement.",
				"line": 28,
				"column": 5,
				"nodeType": "MemberExpression",
				"messageId": "unexpected",
				"endLine": 28,
				"endColumn": 16
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 32,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 32,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 42,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 45,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 45,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 47,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 5
			},
			{
				"ruleId": "no-console",
				"severity": 1,
				"message": "Unexpected console statement.",
				"line": 56,
				"column": 6,
				"nodeType": "MemberExpression",
				"messageId": "unexpected",
				"endLine": 56,
				"endColumn": 17
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 60,
				"column": 2,
				"nodeType": "Program"
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 60,
				"column": 11,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 60,
				"endColumn": 13
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 64,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 64,
				"endColumn": 29
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 64,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 64,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 67,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 67,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 74,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 74,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 75,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 75,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 76,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 76,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 80,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 80,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 87,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 87,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 88,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 88,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 89,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 89,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 91,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 91,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 92,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 92,
				"endColumn": 5
			}
		],
		"errorCount": 27,
		"warningCount": 2,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Spies, Stubs, and Clock`, () => {\n\tit(`cy.spy() - wrap a method in a spy`, () => {\n\t\t// https://on.cypress.io/spy\n\t\tcy.visit(`https://example.cypress.io/commands/spies-stubs-clocks`);\n\n\t\tconst obj = {\n\t\t\t\tfoo() {},\n\t\t\t},\n\n\t\t spy = cy.spy(obj, `foo`).as(`anyArgs`);\n\n\t\tobj.foo();\n\n\t\texpect(spy).to.be.called;\n\t});\n\n\tit(`cy.spy() retries until assertions pass`, () => {\n\t\tcy.visit(`https://example.cypress.io/commands/spies-stubs-clocks`);\n\n\t\tconst obj = {\n\t\t\t/**\n       * Prints the argument passed\n       * @param x {any}\n      */\n\t\t\tfoo(x) {\n\t\t\t\tconsole.log(`obj.foo called with`, x);\n\t\t\t},\n\t\t};\n\n\t\tcy.spy(obj, `foo`).as(`foo`);\n\n\t\tsetTimeout(() => {\n\t\t\tobj.foo(`first`);\n\t\t}, 500);\n\n\t\tsetTimeout(() => {\n\t\t\tobj.foo(`second`);\n\t\t}, 2500);\n\n\t\tcy.get(`@foo`).should(`have.been.calledTwice`);\n\t});\n\n\tit(`cy.stub() - create a stub and/or replace a function with stub`, () => {\n\t\t// https://on.cypress.io/stub\n\t\tcy.visit(`https://example.cypress.io/commands/spies-stubs-clocks`);\n\n\t\tconst obj = {\n\t\t\t/**\n       * prints both arguments to the console\n       * @param a {string}\n       * @param b {string}\n      */\n\t\t\t\tfoo(a, b) {\n\t\t\t\t\tconsole.log(`a`, a, `b`, b);\n\t\t\t\t},\n\t\t\t},\n\n\t\t stub = cy.stub(obj, `foo`).as(`foo`);\n\n\t\tobj.foo(`foo`, `bar`);\n\n\t\texpect(stub).to.be.called;\n\t});\n\n\tit(`cy.clock() - control time in the browser`, () => {\n\t\t// https://on.cypress.io/clock\n\n\t\t// create the date in UTC so its always the same\n\t\t// no matter what local timezone the browser is running in\n\t\tconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\n\n\t\tcy.clock(now);\n\t\tcy.visit(`https://example.cypress.io/commands/spies-stubs-clocks`);\n\t\tcy.get(`#clock-div`).click()\n\t\t\t.should(`have.text`, `1489449600`);\n\t});\n\n\tit(`cy.tick() - move time in the browser`, () => {\n\t\t// https://on.cypress.io/tick\n\n\t\t// create the date in UTC so its always the same\n\t\t// no matter what local timezone the browser is running in\n\t\tconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\n\n\t\tcy.clock(now);\n\t\tcy.visit(`https://example.cypress.io/commands/spies-stubs-clocks`);\n\t\tcy.get(`#tick-div`).click()\n\t\t\t.should(`have.text`, `1489449600`);\n\t\tcy.tick(10000); // 10 seconds passed\n\t\tcy.get(`#tick-div`).click()\n\t\t\t.should(`have.text`, `1489449610`);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/traversal.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 10,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 15,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 17,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 17,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 22,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 24,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 24,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 28,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 30,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 34,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 36,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 41,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 43,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 47,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 49,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 49,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 53,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 55,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 55,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 59,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 59,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 61,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 61,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 66,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 66,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 68,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 68,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 72,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 72,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 74,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 74,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 78,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 78,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 80,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 80,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 84,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 84,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 86,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 86,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 90,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 90,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 92,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 92,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 98,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 98,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 100,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 100,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 104,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 104,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 106,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 106,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 110,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 110,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 112,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 112,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 116,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 116,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 118,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 118,
				"endColumn": 5
			}
		],
		"errorCount": 39,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Traversal`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/traversal`);\n\t});\n\n\tit(`.children() - get child DOM elements`, () => {\n\t\t// https://on.cypress.io/children\n\t\tcy.get(`.traversal-breadcrumb`)\n\t\t\t.children(`.active`)\n\t\t\t.should(`contain`, `Data`);\n\t});\n\n\tit(`.closest() - get closest ancestor DOM element`, () => {\n\t\t// https://on.cypress.io/closest\n\t\tcy.get(`.traversal-badge`)\n\t\t\t.closest(`ul`)\n\t\t\t.should(`have.class`, `list-group`);\n\t});\n\n\tit(`.eq() - get a DOM element at a specific index`, () => {\n\t\t// https://on.cypress.io/eq\n\t\tcy.get(`.traversal-list>li`)\n\t\t\t.eq(1).should(`contain`, `siamese`);\n\t});\n\n\tit(`.filter() - get DOM elements that match the selector`, () => {\n\t\t// https://on.cypress.io/filter\n\t\tcy.get(`.traversal-nav>li`)\n\t\t\t.filter(`.active`).should(`contain`, `About`);\n\t});\n\n\tit(`.find() - get descendant DOM elements of the selector`, () => {\n\t\t// https://on.cypress.io/find\n\t\tcy.get(`.traversal-pagination`)\n\t\t\t.find(`li`).find(`a`)\n\t\t\t.should(`have.length`, 7);\n\t});\n\n\tit(`.first() - get first DOM element`, () => {\n\t\t// https://on.cypress.io/first\n\t\tcy.get(`.traversal-table td`)\n\t\t\t.first().should(`contain`, `1`);\n\t});\n\n\tit(`.last() - get last DOM element`, () => {\n\t\t// https://on.cypress.io/last\n\t\tcy.get(`.traversal-buttons .btn`)\n\t\t\t.last().should(`contain`, `Submit`);\n\t});\n\n\tit(`.next() - get next sibling DOM element`, () => {\n\t\t// https://on.cypress.io/next\n\t\tcy.get(`.traversal-ul`)\n\t\t\t.contains(`apples`).next().should(`contain`, `oranges`);\n\t});\n\n\tit(`.nextAll() - get all next sibling DOM elements`, () => {\n\t\t// https://on.cypress.io/nextall\n\t\tcy.get(`.traversal-next-all`)\n\t\t\t.contains(`oranges`)\n\t\t\t.nextAll().should(`have.length`, 3);\n\t});\n\n\tit(`.nextUntil() - get next sibling DOM elements until next el`, () => {\n\t\t// https://on.cypress.io/nextuntil\n\t\tcy.get(`#veggies`)\n\t\t\t.nextUntil(`#nuts`).should(`have.length`, 3);\n\t});\n\n\tit(`.not() - remove DOM elements from set of DOM elements`, () => {\n\t\t// https://on.cypress.io/not\n\t\tcy.get(`.traversal-disabled .btn`)\n\t\t\t.not(`[disabled]`).should(`not.contain`, `Disabled`);\n\t});\n\n\tit(`.parent() - get parent DOM element from DOM elements`, () => {\n\t\t// https://on.cypress.io/parent\n\t\tcy.get(`.traversal-mark`)\n\t\t\t.parent().should(`contain`, `Morbi leo risus`);\n\t});\n\n\tit(`.parents() - get parent DOM elements from DOM elements`, () => {\n\t\t// https://on.cypress.io/parents\n\t\tcy.get(`.traversal-cite`)\n\t\t\t.parents().should(`match`, `blockquote`);\n\t});\n\n\tit(`.parentsUntil() - get parent DOM elements from DOM elements until el`, () => {\n\t\t// https://on.cypress.io/parentsuntil\n\t\tcy.get(`.clothes-nav`)\n\t\t\t.find(`.active`)\n\t\t\t.parentsUntil(`.clothes-nav`)\n\t\t\t.should(`have.length`, 2);\n\t});\n\n\tit(`.prev() - get previous sibling DOM element`, () => {\n\t\t// https://on.cypress.io/prev\n\t\tcy.get(`.birds`).find(`.active`)\n\t\t\t.prev().should(`contain`, `Lorikeets`);\n\t});\n\n\tit(`.prevAll() - get all previous sibling DOM elements`, () => {\n\t\t// https://on.cypress.io/prevAll\n\t\tcy.get(`.fruits-list`).find(`.third`)\n\t\t\t.prevAll().should(`have.length`, 2);\n\t});\n\n\tit(`.prevUntil() - get all previous sibling DOM elements until el`, () => {\n\t\t// https://on.cypress.io/prevUntil\n\t\tcy.get(`.foods-list`).find(`#nuts`)\n\t\t\t.prevUntil(`#veggies`).should(`have.length`, 3);\n\t});\n\n\tit(`.siblings() - get all sibling DOM elements`, () => {\n\t\t// https://on.cypress.io/siblings\n\t\tcy.get(`.traversal-pills .active`)\n\t\t\t.siblings().should(`have.length`, 2);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/utilities.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 10,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 12,
				"column": 17,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 12,
				"endColumn": 24
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 14,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 14,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 18,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 20,
				"column": 15,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 22
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 22,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 22,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 28,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 30,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 5
			},
			{
				"ruleId": "implicit-arrow-linebreak",
				"severity": 2,
				"message": "Expected no linebreak before this expression.",
				"line": 33,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "unexpected",
				"endLine": 33,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 33,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 33,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 36,
				"column": 18,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 25
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 43,
				"column": 6,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 48,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 48,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 50,
				"column": 18,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 50,
				"endColumn": 25
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 54,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 54,
				"endColumn": 52
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 54,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 56,
				"column": 14,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 56,
				"endColumn": 21
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 59,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 59,
				"endColumn": 44
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 59,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 59,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 62,
				"column": 14,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 62,
				"endColumn": 21
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 65,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 65,
				"endColumn": 43
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 65,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 65,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 69,
				"column": 14,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 69,
				"endColumn": 21
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 72,
				"column": 3,
				"nodeType": "ExpressionStatement",
				"endLine": 72,
				"endColumn": 44
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 72,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 72,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 76,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 76,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 78,
				"column": 16,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 78,
				"endColumn": 23
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 80,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 80,
				"endColumn": 9
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 82,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 82,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 86,
				"column": 17,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 86,
				"endColumn": 24
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 87,
				"column": 2,
				"nodeType": "Program"
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 87,
				"column": 10,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 87,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 89,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 89,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 92,
				"column": 15,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 92,
				"endColumn": 22
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 95,
				"column": 2,
				"nodeType": "Program"
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 97,
				"column": 5,
				"nodeType": "ExpressionStatement",
				"endLine": 98,
				"endColumn": 93
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 97,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 97,
				"endColumn": 11
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 103,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 103,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'Cypress' is not defined.",
				"line": 113,
				"column": 15,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 113,
				"endColumn": 22
			},
			{
				"ruleId": "no-unused-vars",
				"severity": 1,
				"message": "'reject' is defined but never used.",
				"line": 113,
				"column": 41,
				"nodeType": "Identifier",
				"endLine": 113,
				"endColumn": 47
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 124,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 124,
				"endColumn": 5
			},
			{
				"ruleId": "implicit-arrow-linebreak",
				"severity": 2,
				"message": "Expected no linebreak before this expression.",
				"line": 128,
				"column": 4,
				"nodeType": "Identifier",
				"messageId": "unexpected",
				"endLine": 128,
				"endColumn": 17
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 129,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 129,
				"endColumn": 11
			},
			{
				"ruleId": "no-unused-expressions",
				"severity": 2,
				"message": "Expected an assignment or function call and instead saw an expression.",
				"line": 130,
				"column": 5,
				"nodeType": "ExpressionStatement",
				"endLine": 130,
				"endColumn": 31
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'expect' is not defined.",
				"line": 130,
				"column": 5,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 130,
				"endColumn": 11
			}
		],
		"errorCount": 48,
		"warningCount": 1,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Utilities`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/utilities`);\n\t});\n\n\tit(`Cypress._ - call a lodash method`, () => {\n\t\t// https://on.cypress.io/_\n\t\tcy.request(`https://jsonplaceholder.cypress.io/users`)\n\t\t\t.then((response) => {\n\t\t\t\tconst ids = Cypress._.chain(response.body).map(`id`).take(3).value();\n\n\t\t\t\texpect(ids).to.deep.eq([1, 2, 3]);\n\t\t\t});\n\t});\n\n\tit(`Cypress.$ - call a jQuery method`, () => {\n\t\t// https://on.cypress.io/$\n\t\tconst $li = Cypress.$(`.utility-jquery li:first`);\n\n\t\tcy.wrap($li)\n\t\t\t.should(`not.have.class`, `active`)\n\t\t\t.click()\n\t\t\t.should(`have.class`, `active`);\n\t});\n\n\tit(`Cypress.Blob - blob utilities and base64 string conversion`, () => {\n\t\t// https://on.cypress.io/blob\n\t\tcy.get(`.utility-blob`).then(($div) =>\n\t\t// https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n\t\t// get the dataUrl string for the javascript-logo\n\t\t\tCypress.Blob.imgSrcToDataURL(`https://example.cypress.io/assets/img/javascript-logo.png`, undefined, `anonymous`)\n\t\t\t\t.then((dataUrl) => {\n\t\t\t\t\t// create an <img> element and set its src to the dataUrl\n\t\t\t\t\tconst img = Cypress.$(`<img />`, { src: dataUrl });\n\n\t\t\t\t\t// need to explicitly return cy here since we are initially returning\n\t\t\t\t\t// the Cypress.Blob.imgSrcToDataURL promise to our test\n\t\t\t\t\t// append the image\n\t\t\t\t\t$div.append(img);\n\n\t\t\t\t\tcy.get(`.utility-blob img`).click()\n\t\t\t\t\t\t.should(`have.attr`, `src`, dataUrl);\n\t\t\t\t}));\n\t});\n\n\tit(`Cypress.minimatch - test out glob patterns against strings`, () => {\n\t\t// https://on.cypress.io/minimatch\n\t\tlet matching = Cypress.minimatch(`/users/1/comments`, `/users/*/comments`, {\n\t\t\tmatchBase: true,\n\t\t});\n\n\t\texpect(matching, `matching wildcard`).to.be.true;\n\n\t\tmatching = Cypress.minimatch(`/users/1/comments/2`, `/users/*/comments`, {\n\t\t\tmatchBase: true,\n\t\t});\n\t\texpect(matching, `comments`).to.be.false;\n\n\t\t// ** matches against all downstream path segments\n\t\tmatching = Cypress.minimatch(`/foo/bar/baz/123/quux?a=b&c=2`, `/foo/**`, {\n\t\t\tmatchBase: true,\n\t\t});\n\t\texpect(matching, `comments`).to.be.true;\n\n\t\t// whereas * matches only the next path segment\n\n\t\tmatching = Cypress.minimatch(`/foo/bar/baz/123/quux?a=b&c=2`, `/foo/*`, {\n\t\t\tmatchBase: false,\n\t\t});\n\t\texpect(matching, `comments`).to.be.false;\n\t});\n\n\n\tit(`Cypress.moment() - format or parse dates using a moment method`, () => {\n\t\t// https://on.cypress.io/moment\n\t\tconst time = Cypress.moment(`2014-04-25T19:38:53.196Z`).utc().format(`h:mm A`);\n\n\t\texpect(time).to.be.a(`string`);\n\n\t\tcy.get(`.utility-moment`).contains(`3:38 PM`)\n\t\t\t.should(`have.class`, `badge`);\n\n\t\t// the time in the element should be between 3pm and 5pm\n\t\tconst start = Cypress.moment(`3:00 PM`, `LT`),\n\t\t end = Cypress.moment(`5:00 PM`, `LT`);\n\n\t\tcy.get(`.utility-moment .badge`)\n\t\t\t.should(($el) => {\n\t\t\t\t// parse American time like \"3:38 PM\"\n\t\t\t\tconst m = Cypress.moment($el.text().trim(), `LT`),\n\n\t\t\t\t\t// display hours + minutes + AM|PM\n\t\t\t\t f = `h:mm A`;\n\n\t\t\t\texpect(m.isBetween(start, end),\n\t\t\t\t\t`${m.format(f)} should be between ${start.format(f)} and ${end.format(f)}`).to.be.true;\n\t\t\t});\n\t});\n\n\n\tit(`Cypress.Promise - instantiate a bluebird promise`, () => {\n\t\t// https://on.cypress.io/promise\n\t\tlet waited = false;\n\n\t\t/**\n     * @return Bluebird<string>\n     */\n\t\tfunction waitOneSecond() {\n\t\t\t// return a promise that resolves after 1 second\n\t\t\t// @ts-ignore TS2351 (new Cypress.Promise)\n\t\t\treturn new Cypress.Promise((resolve, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// set waited to true\n\t\t\t\t\twaited = true;\n\n\t\t\t\t\t// resolve with 'foo' string\n\t\t\t\t\tresolve(`foo`);\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t}\n\n\t\tcy.then(() =>\n\t\t// return a promise to cy.then() that\n\t\t// is awaited until it resolves\n\t\t// @ts-ignore TS7006\n\t\t\twaitOneSecond().then((str) => {\n\t\t\t\texpect(str).to.eq(`foo`);\n\t\t\t\texpect(waited).to.be.true;\n\t\t\t}));\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/viewport.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 11,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 12,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 12,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 17,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 17,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 20,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 28,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 29,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 29,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 30,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 30,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 31,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 32,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 32,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 33,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 33,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 34,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 34,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 35,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 35,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 36,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 36,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 37,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 37,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 38,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 38,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 39,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 39,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 40,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 40,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 41,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 41,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 42,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 42,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 43,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 43,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 44,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 44,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 45,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 45,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 46,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 46,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 47,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 47,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 51,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 51,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 52,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 52,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 53,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 53,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 54,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 54,
				"endColumn": 5
			}
		],
		"errorCount": 34,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Viewport`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/viewport`);\n\t});\n\n\tit(`cy.viewport() - set the viewport size and dimension`, () => {\n\t\t// https://on.cypress.io/viewport\n\n\t\tcy.get(`#navbar`).should(`be.visible`);\n\t\tcy.viewport(320, 480);\n\n\t\t// the navbar should have collapse since our screen is smaller\n\t\tcy.get(`#navbar`).should(`not.be.visible`);\n\t\tcy.get(`.navbar-toggle`).should(`be.visible`).click();\n\t\tcy.get(`.nav`).find(`a`).should(`be.visible`);\n\n\t\t// lets see what our app looks like on a super large screen\n\t\tcy.viewport(2999, 2999);\n\n\t\t// cy.viewport() accepts a set of preset sizes\n\t\t// to easily set the screen to a device's width and height\n\n\t\t// We added a cy.wait() between each viewport change so you can see\n\t\t// the change otherwise it is a little too fast to see :)\n\n\t\tcy.viewport(`macbook-15`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`macbook-13`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`macbook-11`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`ipad-2`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`ipad-mini`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`iphone-6+`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`iphone-6`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`iphone-5`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`iphone-4`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`iphone-3`);\n\t\tcy.wait(200);\n\n\t\t// cy.viewport() accepts an orientation for all presets\n\t\t// the default orientation is 'portrait'\n\t\tcy.viewport(`ipad-2`, `portrait`);\n\t\tcy.wait(200);\n\t\tcy.viewport(`iphone-4`, `landscape`);\n\t\tcy.wait(200);\n\n\t\t// The viewport will be reset back to the default dimensions\n\t\t// in between tests (the  default can be set in cypress.json)\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/waiting.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 11,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 11,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 12,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 12,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 13,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 14,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 14,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 16,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 16,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 17,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 17,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 20,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 21,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 21,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 24,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 24,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 28,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 28,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 31,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 31,
				"endColumn": 5
			}
		],
		"errorCount": 15,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Waiting`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/waiting`);\n\t});\n\t// BE CAREFUL of adding unnecessary wait times.\n\t// https://on.cypress.io/best-practices#Unnecessary-Waiting\n\n\t// https://on.cypress.io/wait\n\tit(`cy.wait() - wait for a specific amount of time`, () => {\n\t\tcy.get(`.wait-input1`).type(`Wait 1000ms after typing`);\n\t\tcy.wait(1000);\n\t\tcy.get(`.wait-input2`).type(`Wait 1000ms after typing`);\n\t\tcy.wait(1000);\n\t\tcy.get(`.wait-input3`).type(`Wait 1000ms after typing`);\n\t\tcy.wait(1000);\n\t});\n\n\tit(`cy.wait() - wait for a specific route`, () => {\n\t\tcy.server();\n\n\t\t// Listen to GET to comments/1\n\t\tcy.route(`GET`, `comments/*`).as(`getComment`);\n\n\t\t// we have code that gets a comment when\n\t\t// the button is clicked in scripts.js\n\t\tcy.get(`.network-btn`).click();\n\n\t\t// wait for GET comments/1\n\t\tcy.wait(`@getComment`).its(`status`).should(`eq`, 200);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/integration/examples/window.spec.js",
		"messages": [
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'context' is not defined.",
				"line": 3,
				"column": 1,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 3,
				"endColumn": 8
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'beforeEach' is not defined.",
				"line": 4,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 4,
				"endColumn": 12
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 5,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 5,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 8,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 8,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 10,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 10,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 13,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 13,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 15,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 15,
				"endColumn": 5
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'it' is not defined.",
				"line": 18,
				"column": 2,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 18,
				"endColumn": 4
			},
			{
				"ruleId": "no-undef",
				"severity": 2,
				"message": "'cy' is not defined.",
				"line": 20,
				"column": 3,
				"nodeType": "Identifier",
				"messageId": "undef",
				"endLine": 20,
				"endColumn": 5
			}
		],
		"errorCount": 9,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// / <reference types=\"Cypress\" />\n\ncontext(`Window`, () => {\n\tbeforeEach(() => {\n\t\tcy.visit(`https://example.cypress.io/commands/window`);\n\t});\n\n\tit(`cy.window() - get the global window object`, () => {\n\t\t// https://on.cypress.io/window\n\t\tcy.window().should(`have.property`, `top`);\n\t});\n\n\tit(`cy.document() - get the document object`, () => {\n\t\t// https://on.cypress.io/document\n\t\tcy.document().should(`have.property`, `charset`).and(`eq`, `UTF-8`);\n\t});\n\n\tit(`cy.title() - get the title`, () => {\n\t\t// https://on.cypress.io/title\n\t\tcy.title().should(`include`, `Kitchen Sink`);\n\t});\n});\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/plugins/index.js",
		"messages": [
			{
				"ruleId": "no-unused-vars",
				"severity": 1,
				"message": "'on' is defined but never used.",
				"line": 14,
				"column": 19,
				"nodeType": "Identifier",
				"endLine": 14,
				"endColumn": 21
			},
			{
				"ruleId": "no-unused-vars",
				"severity": 1,
				"message": "'config' is defined but never used.",
				"line": 14,
				"column": 23,
				"nodeType": "Identifier",
				"endLine": 14,
				"endColumn": 29
			}
		],
		"errorCount": 0,
		"warningCount": 2,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// ***********************************************************\n// This example plugins/index.js can be used to load plugins\n//\n// You can change the location of this file or turn off loading\n// the plugins file with the 'pluginsFile' configuration option.\n//\n// You can read more here:\n// https://on.cypress.io/plugins-guide\n// ***********************************************************\n\n// This function is called when a project is opened or re-opened (e.g. due to\n// the project's config changing)\n\nmodule.exports = (on, config) => {\n\t// `on` is used to hook into various events Cypress emits\n\t// `config` is the resolved Cypress config\n};\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/support/commands.js",
		"messages": [],
		"errorCount": 0,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/cypress/support/index.js",
		"messages": [],
		"errorCount": 0,
		"warningCount": 0,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"output": "// ***********************************************************\n// This example support/index.js is processed and\n// loaded automatically before your test files.\n//\n// This is a great place to put global configuration and\n// behavior that modifies Cypress.\n//\n// You can change the location of this file or turn off\n// automatically serving support files with the\n// 'supportFile' configuration option.\n//\n// You can read more here:\n// https://on.cypress.io/configuration\n// ***********************************************************\n\n// Import commands.js using ES2015 syntax:\nimport './commands';\n\n// Alternatively you can use CommonJS syntax:\n// require('./commands')\n"
	},
	{
		"filePath": "/c/Users/amyka/web/my_testing_blog/filters/dates.js",
		"messages": [
			{
				"ruleId": "func-names",
				"severity": 1,
				"message": "Unexpected unnamed function.",
				"line": 4,
				"column": 18,
				"nodeType": "FunctionExpression",
				"messageId": "unnamed",
				"endLine": 4,
				"endColumn": 27
			},
			{
				"ruleId": "no-mixed-spaces-and-tabs",
				"severity": 2,
				"message": "Mixed spaces and tabs.",
				"line": 6,
				"column": 2,
				"nodeType": "Program"
			}
		],
		"errorCount": 1,
		"warningCount": 1,
		"fixableErrorCount": 0,
		"fixableWarningCount": 0,
		"source": "/*\r\n  A date formatter filter for Nunjucks\r\n*/\r\nmodule.exports = function (date) {\r\n\tconst month = [`January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`],\r\n\t d = new Date(date);\r\n\treturn `${d.getDate()} ${month[d.getMonth()].substr(0, 3)} ${d.getUTCFullYear()}`;\r\n};\r\n"
	}
]