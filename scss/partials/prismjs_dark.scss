@import '../variables.scss';

.gatsby-highlight {
	background: $black;
	border: 2px solid $black;
	border-radius: 0.3em;
	margin: 0.5em 0;
	padding: 1em 2em;
	position: relative;
	overflow: auto;

	&[data-language='bash'] {
		padding: 0.5em 1em;
	}

	&[data-language] {
		&:before {
			background: $blue;
			color: #fff;
			border-radius: 0 0 10px 10px;
			padding: 5px 10px;
			position: absolute;
			top: 0;
			right: 20px;
		}
	}

	&[data-language='text'] {
		background: $white;
		color: $black;

		pre,
		code {
			color: inherit;
		}
	}

	&[data-language='html'] {
		&:before {
			content: 'HTML';
		}
	}

	&[data-language='css'] {
		&:before {
			content: 'CSS';
		}
	}

	&[data-language='scss'] {
		&:before {
			content: 'SCSS';
		}
	}

	&[data-language='javascript'] {
		&:before {
			content: 'JS';
		}
	}
}

pre,
code {
	color: $aqua;
	font-size: 0.9em;
	font-family: 'Source Code Pro', 'Anonymous Pro', monospace;
	text-align: left;
	line-height: 1.5;
	tab-size: 4;
	hyphens: none;

	&.line-numbers {
		padding: 0;
		padding-left: 2.8em;
		overflow: initial;
	}

	&::selection,
	&::mozselection {
		background: #6ca7d8;
	}

	& > code[class*='language-'] {
		position: relative;
		z-index: 1;
	}
}

:not(pre) {
	& > code {
		background: $aqua_light;
		border-radius: 0.3em;
		color: $black;
		font-size: 0.8em;
		padding: 0.1em 0.3em;
	}
}

pre {
	&[data-line] {
		position: relative;
	}

	&.line-numbers {
		position: relative;
		padding-left: 3.8em;
		counter-reset: linenumber;

		& > code {
			position: relative;
		}
	}
}

.line-numbers {
	padding-left: 2.8em;

	.line-numbers-rows {
		position: absolute;
		pointer-events: none;
		top: 0;
		font-size: 100%;
		left: -3.8em;
		width: 3em; /* works for line-numbers below 1000 lines */
		letter-spacing: -1px;
		border-right: 1px solid #999;

		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;

		> span {
			pointer-events: none;
			display: block;
			counter-increment: linenumber;

			&:before {
				content: counter(linenumber);
				color: #999;
				display: block;
				padding-right: 0.8em;
				text-align: right;
			}
		}
	}
}

.line-highlight {
	position: absolute;
	left: 0;
	right: 0;
	padding: inherit 0;
	margin-top: 1em;
	background: #edf3f7;
	box-shadow: inset 5px 0 0 #1c75bc;
	z-index: 0;
	pointer-events: none;
	line-height: inherit;
	white-space: pre;
}

.namespace {
	opacity: 0.7;
}

.token {
	&.comment,
	&.prolog,
	&.doctype,
	&.cdata {
		color: #93a1a1;
	}

	&.punctuation {
		color: #999999;
	}

	&.property,
	&.tag,
	&.boolean,
	&.number,
	&.constant,
	&.symbol,
	&.deleted {
		color: #990055;
	}

	&.selector,
	&.attr-name,
	&.string,
	&.char,
	&.builtin,
	&.inserted {
		color: #669900;
	}

	&.operator,
	&.entity,
	&.url {
		color: #a67f59;
	}

	&.atrule,
	&.attr-value,
	&.keyword {
		color: #1c75bc;
	}

	&.function {
		color: #dd4a68;
	}

	&.regex,
	&.important,
	&.variable {
		color: #ee9900;
	}

	&.entity {
		cursor: help;
	}
}

.language-css,
.style {
	&.string {
		color: #a67f59;
	}
}

.command-line-prompt {
	border-right: 1px solid #999;
	display: block;
	float: left;
	font-size: 100%;
	letter-spacing: -1px;
	margin-right: 1em;
	pointer-events: none;

	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

	& > span {
		&:before {
			color: #999;
			content: ' ';
			display: block;
			padding-right: 0.8em;
		}

		&[data-user] {
			&:before {
				content: '[' attr(data-user) '@' attr(data-host) '] $';
			}
		}

		&[data-user='root'] {
			&:before {
				content: '[' attr(data-user) '@' attr(data-host) '] #';
			}
		}

		&[data-prompt] {
			&:before {
				content: attr(data-prompt);
			}
		}
	}
}
